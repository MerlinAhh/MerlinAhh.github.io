<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Merlinの博客</title>
  
  <subtitle>前端开发工程师</subtitle>
  <link href="https://merlinahh.github.io/atom.xml" rel="self"/>
  
  <link href="https://merlinahh.github.io/"/>
  <updated>2024-02-28T00:33:56.705Z</updated>
  <id>https://merlinahh.github.io/</id>
  
  <author>
    <name>Merlin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用 nvm 来管理 node版本</title>
    <link href="https://merlinahh.github.io/2022/02/28/nvm-node/"/>
    <id>https://merlinahh.github.io/2022/02/28/nvm-node/</id>
    <published>2022-02-28T00:09:31.000Z</published>
    <updated>2024-02-28T00:33:56.705Z</updated>
    
    <content type="html"><![CDATA[<p>有很多项目、依赖需要指定版本 <code>node</code> 支持才能使用(踩过的坑)，避面切换项目需要频繁安装不通版本 <code>node</code> 这里可以安装 <code>nvm</code> 来进行管理</p><p>1.列出已经安装的 <code>node</code> 版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls    </span><br></pre></td></tr></table></figure><p>2.列出所有可以安装的 <code>node</code> 版本号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm ls-remote</span><br></pre></td></tr></table></figure><p>3.安装 <code>node</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 安装指定版本的node</span><br><span class="line">nvm install v10.4.0</span><br><span class="line"></span><br><span class="line">// 安装最新稳定版node</span><br><span class="line">nvm install stable</span><br></pre></td></tr></table></figure><p>4.切换已有的 <code>node</code> 版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm use v10.4.0   </span><br></pre></td></tr></table></figure><p>5.查看当前node版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvm current</span><br></pre></td></tr></table></figure><p>6.指定默认的node版本</p><pre><code>nvm alias default v10.4.0  </code></pre><p>以上是 <code>nvm</code> 的常用命令</p>]]></content>
    
    
    <summary type="html">使用 nvm 来管理 node版本</summary>
    
    
    
    <category term="前端" scheme="https://merlinahh.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="node" scheme="https://merlinahh.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>时间戳转具体日时分秒</title>
    <link href="https://merlinahh.github.io/2022/02/17/trsndformTime/"/>
    <id>https://merlinahh.github.io/2022/02/17/trsndformTime/</id>
    <published>2022-02-17T07:26:01.000Z</published>
    <updated>2024-02-28T00:37:23.961Z</updated>
    
    <content type="html"><![CDATA[<p>用于需要查询具体时间段的函数，传入时间戳 返回具体时分秒</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">function transformTime(timestamp) &#123; </span><br><span class="line">  const DAY_MILLISECOND = 86400000;</span><br><span class="line">  const HOUR_MILLISECOND = 3600000;</span><br><span class="line">  const MINUTE_MILLISECOND = 60000;</span><br><span class="line"></span><br><span class="line">  const dayValue = (timestamp / DAY_MILLISECOND) | 0;</span><br><span class="line">  const hourValue = ((timestamp % DAY_MILLISECOND) / HOUR_MILLISECOND) | 0;</span><br><span class="line">  const minValue =</span><br><span class="line">    (((timestamp % DAY_MILLISECOND) % HOUR_MILLISECOND) / MINUTE_MILLISECOND) |</span><br><span class="line">    0;</span><br><span class="line">  const secondValue =</span><br><span class="line">    ((((timestamp % DAY_MILLISECOND) % HOUR_MILLISECOND) % MINUTE_MILLISECOND) /</span><br><span class="line">      1000) |</span><br><span class="line">    0;</span><br><span class="line"></span><br><span class="line">  const day = dayValue ? dayValue.toString().padStart(2, &quot;0&quot;) + &quot;天&quot; : &quot;&quot;;</span><br><span class="line">  const hour =</span><br><span class="line">    day || hourValue ? hourValue.toString().padStart(2, &quot;0&quot;) + &quot;时&quot; : &quot;&quot;;</span><br><span class="line">  const minute =</span><br><span class="line">    hour || minValue ? minValue.toString().padStart(2, &quot;0&quot;) + &quot;分&quot; : &quot;&quot;;</span><br><span class="line">  const second =</span><br><span class="line">    minute || secondValue ? secondValue.toString().padStart(2, &quot;0&quot;) + &quot;秒&quot; : &quot;&quot;;</span><br><span class="line"></span><br><span class="line">  return day + hour + minute + second;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">用于需要查询具体时间段的函数，传入时间戳 返回具体时分秒</summary>
    
    
    
    <category term="前端" scheme="https://merlinahh.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="js" scheme="https://merlinahh.github.io/tags/js/"/>
    
    <category term="笔记" scheme="https://merlinahh.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>很好用的 scp 上传文件脚本</title>
    <link href="https://merlinahh.github.io/2020/07/21/scp-upload-files/"/>
    <id>https://merlinahh.github.io/2020/07/21/scp-upload-files/</id>
    <published>2020-07-21T05:11:49.000Z</published>
    <updated>2024-02-27T23:48:43.639Z</updated>
    
    <content type="html"><![CDATA[<p>scp 本地连接远程服务器传输文件，无需二次填写密码确认</p><p>文件名后缀为<code>.sh</code>日常更新文件可以命名<code>update.sh</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 无需验证直接上传到服务器</span><br><span class="line">set user userName #（特殊符号需要转义符^）</span><br><span class="line">set pass passWard #（特殊符号需要转义符^）</span><br><span class="line">set dir /srv/blog #（服务器目录）</span><br><span class="line">set ip $&#123;ipAddr&#125; #（服务器IP）</span><br><span class="line">set filen ./public/* #（本地文件目录）</span><br><span class="line"></span><br><span class="line">spawn scp $&#123;filen&#125; $&#123;user&#125;@$&#123;ip&#125;:$&#123;dir&#125;</span><br><span class="line">expect &quot;$&#123;user&#125;@$&#123;ip&#125;&#x27;s password:&quot;</span><br><span class="line">send &quot;$&#123;pass&#125;\r&quot;</span><br><span class="line">interact</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;scp 本地连接远程服务器传输文件，无需二次填写密码确认&lt;/p&gt;
&lt;p&gt;文件名后缀为&lt;code&gt;.sh&lt;/code&gt;日常更新文件可以命名&lt;code&gt;update.sh&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table</summary>
      
    
    
    
    <category term="服务器" scheme="https://merlinahh.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="笔记" scheme="https://merlinahh.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="Linux" scheme="https://merlinahh.github.io/tags/Linux/"/>
    
    <category term="shell脚本" scheme="https://merlinahh.github.io/tags/shell%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB 用法</title>
    <link href="https://merlinahh.github.io/2019/11/11/MongoDB-study/"/>
    <id>https://merlinahh.github.io/2019/11/11/MongoDB-study/</id>
    <published>2019-11-11T02:36:54.000Z</published>
    <updated>2024-02-28T00:44:05.882Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>Windows：<a href="https://www.runoob.com/mongodb/mongodb-window-install.html">https://www.runoob.com/mongodb/mongodb-window-install.html</a></p><p>Mac：<a href="https://www.runoob.com/mongodb/mongodb-osx-install.html">https://www.runoob.com/mongodb/mongodb-osx-install.html</a></p><p>Linux：<a href="https://www.runoob.com/mongodb/mongodb-linux-install.html">https://www.runoob.com/mongodb/mongodb-linux-install.html</a></p><table><thead><tr><th align="left">SQL术语/概念</th><th align="left">MongoDB术语/概念</th><th align="left">解释/说明</th></tr></thead><tbody><tr><td align="left">database</td><td align="left">database</td><td align="left">数据库</td></tr><tr><td align="left">table</td><td align="left">collection</td><td align="left">数据库表/集合</td></tr><tr><td align="left">row</td><td align="left">document</td><td align="left">数据记录行/文档</td></tr><tr><td align="left">column</td><td align="left">field</td><td align="left">数据字段/域</td></tr><tr><td align="left">index</td><td align="left">index</td><td align="left">索引</td></tr><tr><td align="left">table joins</td><td align="left"></td><td align="left">表连接,MongoDB不支持</td></tr><tr><td align="left">primary key</td><td align="left">primary key</td><td align="left">主键,MongoDB自动将_id字段设置为主键</td></tr></tbody></table><h1 id="运行MongoDB"><a href="#运行MongoDB" class="headerlink" title="运行MongoDB"></a>运行MongoDB</h1><p>我们可以使用 brew 命令或 mongod 命令来启动服务。</p><p>brew 启动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services start mongodb-community@4.4</span><br></pre></td></tr></table></figure><p>brew 停止：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew services stop mongodb-community@4.4</span><br></pre></td></tr></table></figure><p>mongod 命令后台进程方式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongod --config /usr/local/etc/mongod.conf --fork</span><br></pre></td></tr></table></figure><p>这种方式启动要关闭可以进入 mongo shell 控制台来实现：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.adminCommand(&#123; &quot;shutdown&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><p><img src="/2019/11/11/MongoDB-study/1.png"><br><img src="/2019/11/11/MongoDB-study/2.png"></p><ul><li>进入MongoDB安装目录下的bin目录，运行mongo程序</li><li>mongod 命令启动mongodb</li><li>mongo 命令连接</li></ul><p><img src="/2019/11/11/MongoDB-study/3.png"></p><ul><li>执行 <strong>show dbs</strong> 命令查看所有数据</li></ul><p><img src="/2019/11/11/MongoDB-study/4.png"></p><ul><li>执行 <strong>db</strong> 命令可以显示当前数据库对象或集合</li></ul><p><img src="/2019/11/11/MongoDB-study/5.png"></p><ul><li><strong>use</strong>命令可以连接到指定数据库</li></ul><p><img src="/2019/11/11/MongoDB-study/6.png"></p><ul><li>创建集合</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.createCollection(name, options)</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>name: 要创建的集合名称</li><li>options: 可选参数, 指定有关内存大小及索引的选项</li></ul><p>options 可以是如下参数：</p><table><thead><tr><th align="left">字段</th><th align="left">类型</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">capped</td><td align="left">布尔</td><td align="left">（可选）如果为 true，则创建固定集合。固定集合是指有着固定大小的集合，当达到最大值时，它会自动覆盖最早的文档。<br><strong>当该值为 true 时，必须指定 size 参数。</strong></td></tr><tr><td align="left">autoIndexId</td><td align="left">布尔</td><td align="left">3.2 之后不再支持该参数。（可选）如为 true，自动在 _id 字段创建索引。默认为 false。</td></tr><tr><td align="left">size</td><td align="left">数值</td><td align="left">（可选）为固定集合指定一个最大值，即字节数。<br><strong>如果 capped 为 true，也需要指定该字段。</strong></td></tr><tr><td align="left">max</td><td align="left">数值</td><td align="left">（可选）指定固定集合中包含文档的最大数量。</td></tr></tbody></table><p><img src="/2019/11/11/MongoDB-study/7.png"></p><p><img src="/2019/11/11/MongoDB-study/8.png"></p><p>创建集合并插入数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.集合名.insert(&#123;...&#125;)</span><br></pre></td></tr></table></figure><p><img src="/2019/11/11/MongoDB-study/9.png"></p><p><img src="/2019/11/11/MongoDB-study/10.png"></p><ul><li>删除数据库下所有集合</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.dropDatabase()</span><br></pre></td></tr></table></figure><p><img src="/2019/11/11/MongoDB-study/11.png"></p><ul><li>删除指定集合</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.集合名.drop()</span><br></pre></td></tr></table></figure><p><img src="/2019/11/11/MongoDB-study/12.png"></p><ul><li>插入数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.集合名.insert(document) 新增</span><br><span class="line">&gt; db.集合名.save(document) 新增或修改，通过主键_id区分</span><br></pre></td></tr></table></figure><p><strong>添加单条：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.集合名.insertOne(document,&#123;</span><br><span class="line">    writeConcern: document</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>添加多条：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.集合名.insertMany([document1, document2]</span><br><span class="line">&#123;</span><br><span class="line">    writeConcern: document,</span><br><span class="line">    ordered: boolean</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>参数说明：</strong></p><p>**document:**要写入的文档。<br>**writeConcern:**写入策略，默认为 1，即要求确认写操作，0 是不要求。<br>**ordered:**指定是否按顺序写入，默认 true，按顺序写入。</p><p><img src="/2019/11/11/MongoDB-study/13.png"></p><p><img src="/2019/11/11/MongoDB-study/14.png"></p><ul><li>更新数据（执行错误）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.集合名.update(&lt;query&gt;,&lt;update&gt;,&#123;</span><br><span class="line">        upsert: &lt;boolean&gt;,</span><br><span class="line">        multi: &lt;boolean&gt;,</span><br><span class="line">        writeConcern: &lt;document&gt;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>**query:**update的查询条件，类似sql update查询内where后面的。</li><li><strong>update:</strong> update的对象和一些更新的操作符（如$,$inc…）等，也可以理解为sql update查询内set后面的</li><li>**upsert:**可选，这个参数的意思是，如果不存在update的记录，是否插入objNew,true为插入，默认是false，不插入。</li><li>**multi:**可选，mongodb 默认是false,只更新找到的第一条记录，如果这个参数为true,就把按条件查出来多条记录全部更新。</li><li>**writeConcern:**可选，抛出异常的级别。</li></ul><p><img src="/2019/11/11/MongoDB-study/15.png"></p><ul><li>删除数据（执行错误）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.集合名.remove(&lt;query&gt;,</span><br><span class="line">    &#123;</span><br><span class="line">        justOne: &lt;boolean&gt;,</span><br><span class="line">        writeConcern: &lt;document&gt;</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">&gt; db.集合名.remove(&#123;&#125;)    删除所有数据</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li>**query:**（可选）删除的文档的条件。</li><li>**justOne:**（可选）如果设为 true 或 1，则只删除一个文档，如果不设置该参数，或使用默认值 false，则删除所有匹配条件的文档。</li><li>**writeConcern:**（可选）抛出异常的级别。</li></ul><p><img src="/2019/11/11/MongoDB-study/16.png"></p><ul><li>查询数据</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.集合名.find(query, projection)</span><br><span class="line">&gt; db.集合名.find()   查询所有</span><br><span class="line">&gt; db.集合名.findOne()  查询单条</span><br><span class="line">&gt; db.集合名.find().pretty()   查询数据美化显示</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><strong>query：</strong>可选，使用查询操作符指定查询条件</li><li><strong>projection：</strong>可选，使用投影操作符指定返回的键。查询时返回文档中所有键值， 只需省略该参数即可（默认省略）。</li></ul><p><img src="/2019/11/11/MongoDB-study/17.png"><br><img src="/2019/11/11/MongoDB-study/18.png"><br><img src="/2019/11/11/MongoDB-study/19.png"></p><p>query参数说明：</p><table><thead><tr><th align="left">操作</th><th align="left">格式</th><th align="left">范例</th></tr></thead><tbody><tr><td align="left">等于</td><td align="left">{<key>:<value>}</td><td align="left">db.col.find({“name”:”张三三”}).pretty()</td></tr><tr><td align="left">小于</td><td align="left">{<key>:{$lt:<value>}}</td><td align="left">db.col.find({“likes”:{$lt:50}}).pretty()</td></tr><tr><td align="left">小于或等于</td><td align="left">{<key>:{$lte:<value>}}</td><td align="left">db.col.find({“likes”:{$lte:50}}).pretty()</td></tr><tr><td align="left">大于</td><td align="left">{<key>:{$gt:<value>}}</td><td align="left">db.col.find({“likes”:{$gt:50}}).pretty()</td></tr><tr><td align="left">大于或等于</td><td align="left">{<key>:{$gte:<value>}}</td><td align="left">db.col.find({“likes”:{$gte:50}}).pretty()</td></tr><tr><td align="left">不等于</td><td align="left">{<key>:{$ne:<value>}}</td><td align="left">db.col.find({“likes”:{$ne:50}}).pretty()</td></tr></tbody></table><ul><li>多条件AND在query中用逗号分割：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.col.find(&#123;key1:value1, key2:value2&#125;).pretty()</span><br><span class="line">&gt; db.集合名.find(</span><br><span class="line">    &#123;</span><br><span class="line">        $or: [</span><br><span class="line">             &#123;key1: value1&#125;, &#123;key2:value2&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">).pretty()</span><br></pre></td></tr></table></figure><p>$type 通过字段类型查询：</p><table><thead><tr><th align="left"><strong>类型</strong></th><th align="left"><strong>数字</strong></th><th align="left"><strong>备注</strong></th></tr></thead><tbody><tr><td align="left">Double</td><td align="left">1</td><td align="left"></td></tr><tr><td align="left">String</td><td align="left">2</td><td align="left"></td></tr><tr><td align="left">Object</td><td align="left">3</td><td align="left"></td></tr><tr><td align="left">Array</td><td align="left">4</td><td align="left"></td></tr><tr><td align="left">Binary data</td><td align="left">5</td><td align="left"></td></tr><tr><td align="left">Undefined</td><td align="left">6</td><td align="left">已废弃。</td></tr><tr><td align="left">Object id</td><td align="left">7</td><td align="left"></td></tr><tr><td align="left">Boolean</td><td align="left">8</td><td align="left"></td></tr><tr><td align="left">Date</td><td align="left">9</td><td align="left"></td></tr><tr><td align="left">Null</td><td align="left">10</td><td align="left"></td></tr><tr><td align="left">Regular Expression</td><td align="left">11</td><td align="left"></td></tr><tr><td align="left">JavaScript</td><td align="left">13</td><td align="left"></td></tr><tr><td align="left">Symbol</td><td align="left">14</td><td align="left"></td></tr><tr><td align="left">JavaScript (with scope)</td><td align="left">15</td><td align="left"></td></tr><tr><td align="left">32-bit integer</td><td align="left">16</td><td align="left"></td></tr><tr><td align="left">Timestamp</td><td align="left">17</td><td align="left"></td></tr><tr><td align="left">64-bit integer</td><td align="left">18</td><td align="left"></td></tr><tr><td align="left">Min key</td><td align="left">255</td><td align="left">Query with -1.</td></tr><tr><td align="left">Max key</td><td align="left">127</td><td align="left"></td></tr></tbody></table><p>查询name类型为string的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.集合名.find(&#123;&quot;name&quot;: &#123;$type: &#x27;string&#x27;&#125;&#125;)</span><br><span class="line">&gt; db.集合名.find(&#123;&quot;name&quot;: &#123;$type: 2&#125;&#125;)</span><br></pre></td></tr></table></figure><p>limit()方法固定条数查询：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.集合名.find().limit(NUMBER)</span><br></pre></td></tr></table></figure><p><img src="/2019/11/11/MongoDB-study/22.png"><br><img src="/2019/11/11/MongoDB-study/23.png"><br><img src="/2019/11/11/MongoDB-study/20.png"></p><p>skip()方法跳过指定数量查询：</p><ul><li>skip()参数默认0</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.集合名.find().limit(NUMBER).skip(NUMBER)</span><br></pre></td></tr></table></figure><p><img src="/2019/11/11/MongoDB-study/21.png"></p><p>sort()方法</p><ul><li><p>KEY：字段名</p></li><li><p>sort()参数-1降序1升序</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.集合名.find().sort(&#123;KEY:1&#125;)</span><br></pre></td></tr></table></figure><h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><ul><li>Key为索引字段，1升序-1降序</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; db.集合名.createIndex(keys, options)</span><br></pre></td></tr></table></figure><p>options参数说明：</p><table><thead><tr><th align="left">Parameter</th><th align="left">Type</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">background</td><td align="left">Boolean</td><td align="left">建索引过程会阻塞其它数据库操作，background可指定以后台方式创建索引，即增加 “background” 可选参数。 “background” 默认值为<strong>false</strong>。</td></tr><tr><td align="left">unique</td><td align="left">Boolean</td><td align="left">建立的索引是否唯一。指定为true创建唯一索引。默认值为<strong>false</strong>.</td></tr><tr><td align="left">name</td><td align="left">string</td><td align="left">索引的名称。如果未指定，MongoDB的通过连接索引的字段名和排序顺序生成一个索引名称。</td></tr><tr><td align="left">dropDups</td><td align="left">Boolean</td><td align="left"><strong>3.0+版本已废弃。</strong>在建立唯一索引时是否删除重复记录,指定 true 创建唯一索引。默认值为 <strong>false</strong>.</td></tr><tr><td align="left">sparse</td><td align="left">Boolean</td><td align="left">对文档中不存在的字段数据不启用索引；这个参数需要特别注意，如果设置为true的话，在索引字段中不会查询出不包含对应字段的文档.。默认值为 <strong>false</strong>.</td></tr><tr><td align="left">expireAfterSeconds</td><td align="left">integer</td><td align="left">指定一个以秒为单位的数值，完成 TTL设定，设定集合的生存时间。</td></tr><tr><td align="left">v</td><td align="left">index version</td><td align="left">索引的版本号。默认的索引版本取决于mongod创建索引时运行的版本。</td></tr><tr><td align="left">weights</td><td align="left">document</td><td align="left">索引权重值，数值在 1 到 99,999 之间，表示该索引相对于其他索引字段的得分权重。</td></tr><tr><td align="left">default_language</td><td align="left">string</td><td align="left">对于文本索引，该参数决定了停用词及词干和词器的规则的列表。 默认为英语</td></tr><tr><td align="left">language_override</td><td align="left">string</td><td align="left">对于文本索引，该参数指定了包含在文档中的字段名，语言覆盖默认的language，默认值为 language.</td></tr></tbody></table><h1 id="MongoDB-聚合"><a href="#MongoDB-聚合" class="headerlink" title="MongoDB 聚合"></a>MongoDB 聚合</h1><p><a href="https://www.runoob.com/mongodb/mongodb-aggregate.html">https://www.runoob.com/mongodb/mongodb-aggregate.html</a></p><h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><table><thead><tr><th align="left">数据类型</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">String</td><td align="left">字符串。存储数据常用的数据类型。在 MongoDB 中，UTF-8 编码的字符串才是合法的。</td></tr><tr><td align="left">Integer</td><td align="left">整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位。</td></tr><tr><td align="left">Boolean</td><td align="left">布尔值。用于存储布尔值（真/假）。</td></tr><tr><td align="left">Double</td><td align="left">双精度浮点值。用于存储浮点值。</td></tr><tr><td align="left">Min/Max keys</td><td align="left">将一个值与 BSdrrON（二进制的 JSON）元素的最低值和最高值相对比。</td></tr><tr><td align="left">Array</td><td align="left">用于将数组或列表或多个值存储为一个键。</td></tr><tr><td align="left">Timestamp</td><td align="left">时间戳。记录文档修改或添加的具体时间。</td></tr><tr><td align="left">Object</td><td align="left">用于内嵌文档。</td></tr><tr><td align="left">Null</td><td align="left">用于创建空值。</td></tr><tr><td align="left">Symbol</td><td align="left">符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于采用特殊符号类型的语言。</td></tr><tr><td align="left">Date</td><td align="left">日期时间。用 UNIX 时间格式来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息。</td></tr><tr><td align="left">Object ID</td><td align="left">对象 ID。用于创建文档的 ID。</td></tr><tr><td align="left">Binary Data</td><td align="left">二进制数据。用于存储二进制数据。</td></tr><tr><td align="left">Code</td><td align="left">代码类型。用于在文档中存储 JavaScript 代码。</td></tr><tr><td align="left">Regular expression</td><td align="left">正则表达式类型。用于存储正则表达式。</td></tr></tbody></table><h1 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h1><h2 id="命令行连接"><a href="#命令行连接" class="headerlink" title="命令行连接"></a>命令行连接</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]</span><br></pre></td></tr></table></figure><ul><li>**mongodb://**这是固定的格式，必须要指定。</li><li><strong>username:password@</strong> 可选项，如果设置，在连接数据库服务器之后，驱动都会尝试登录这个数据库</li><li><strong>host1</strong> 必须的指定至少一个host, host1 是这个URI唯一要填写的。它指定了要连接服务器的地址。如果要连接复制集，请指定多个主机地址。</li><li><strong>portX</strong>可选的指定端口，如果不填，默认为27017</li><li><strong>/database</strong> 如果指定username:password@，连接并验证登录指定数据库。若不指定，默认打开 test 数据库。</li><li><strong>?options</strong> 是连接选项。如果不使用/database，则前面需要加上/。所有连接选项都是键值对name=value，键值对之间通过&amp;或;（分号）隔开</li></ul><table><thead><tr><th align="left">选项</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">replicaSet=name</td><td align="left">验证replica set的名称。 Impliesconnect=replicaSet.</td></tr><tr><td align="left">slaveOk=true|false</td><td align="left"><ul><li>true:在connect=direct模式下，驱动会连接第一台机器，即使这台服务器不是主。在connect=replicaSet模式下，驱动会发送所有的写请求到主并且把读取操作分布在其他从服务器。</li><li>false: 在 connect=direct模式下，驱动会自动找寻主服务器. 在connect=replicaSet 模式下，驱动仅仅连接主服务器，并且所有的读写命令都连接到主服务器。</li></td></tr><tr><td align="left">safe=true|false</td><td align="left"><ul><li>true: 在执行更新操作之后，驱动都会发送getLastError命令来确保更新成功。(还要参考 wtimeoutMS).</li></ul>false: 在每次更新之后，驱动不会发送getLastError来确保更新成功。</td></tr><tr><td align="left">w=n</td><td align="left">驱动添加 { w : n } 到getLastError命令. 应用于safe=true。</td></tr><tr><td align="left">wtimeoutMS=ms</td><td align="left">驱动添加 { wtimeout : ms } 到 getlasterror 命令. 应用于 safe=true.</td></tr><tr><td align="left">fsync=true|false</td><td align="left"><ul><li>true: 驱动添加 { fsync : true } 到 getlasterror 命令.应用于 safe=true.</li><li>false: 驱动不会添加到getLastError命令中。</li></td></tr><tr><td align="left">journal=true|false</td><td align="left">如果设置为 true, 同步到 journal (在提交到数据库前写入到实体中). 应用于 safe=true</td></tr><tr><td align="left">connectTimeoutMS=ms</td><td align="left">可以打开连接的时间。</td></tr><tr><td align="left">socketTimeoutMS=ms</td><td align="left">发送和接受sockets的时间。</td></tr></tbody></table><p>使用用户名密码连接到服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; mongodb://username:password@hostname/dbname</span><br></pre></td></tr></table></figure><h2 id="Navicat连接"><a href="#Navicat连接" class="headerlink" title="Navicat连接"></a>Navicat连接</h2><p><img src="/2019/11/11/MongoDB-study/24.png"></p><p>执行mongo后会返回一条连接路径</p><p>Navicat创建新连接选择MongoDB使用uri连接，输入上面返回的连接路径</p><p><img src="/2019/11/11/MongoDB-study/25.png"></p><p>测试成功后点保存，即可连接数据库</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;p&gt;Windows：&lt;a href=&quot;https://www.runoob.com/mongodb/mongodb-window-install</summary>
      
    
    
    
    <category term="数据库" scheme="https://merlinahh.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="MongoDB" scheme="https://merlinahh.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>检测设备系统是否 win7 的函数</title>
    <link href="https://merlinahh.github.io/2019/06/10/isWin7/"/>
    <id>https://merlinahh.github.io/2019/06/10/isWin7/</id>
    <published>2019-06-10T12:04:28.000Z</published>
    <updated>2024-02-28T00:41:49.251Z</updated>
    
    <content type="html"><![CDATA[<p>用于检测用户设备的函数，传入v</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">function isWin7(v) &#123;</span><br><span class="line">  const userAgent = navigator.userAgent.toLowerCase();</span><br><span class="line">  let version;</span><br><span class="line">  if (userAgent.includes(&quot;win&quot;)) &#123;</span><br><span class="line">         version = &quot;Windows&quot;;</span><br><span class="line">    if (userAgent.includes(&quot;windows nt 5.0&quot;)) &#123;</span><br><span class="line">         version = &quot;Windows 2000&quot;;</span><br><span class="line">    &#125; else if (</span><br><span class="line">      userAgent.includes(&quot;windows nt 5.1&quot;) ||</span><br><span class="line">      userAgent.includes(&quot;windows nt 5.2&quot;)</span><br><span class="line">    ) &#123;</span><br><span class="line">         version = &quot;Windows XP&quot;;</span><br><span class="line">    &#125; else if (userAgent.includes(&quot;windows nt 6.0&quot;)) &#123;</span><br><span class="line">         version = &quot;Windows Vista&quot;;、</span><br><span class="line">    &#125; else if (</span><br><span class="line">      userAgent.includes(&quot;windows nt 6.1&quot;) ||</span><br><span class="line">      userAgent.includes(&quot;windows 7&quot;)</span><br><span class="line">    ) &#123;</span><br><span class="line">         version = &quot;Windows 7&quot;;</span><br><span class="line">    &#125; else if (</span><br><span class="line">      userAgent.includes(&quot;windows nt 6.2&quot;) ||</span><br><span class="line">      userAgent.includes(&quot;windows 8&quot;)</span><br><span class="line">    ) &#123;</span><br><span class="line">         version = &quot;Windows 8&quot;;</span><br><span class="line">    &#125; else if (userAgent.includes(&quot;windows nt 6.3&quot;)) &#123;</span><br><span class="line">         version = &quot;Windows 8.1&quot;;</span><br><span class="line">    &#125; else if (</span><br><span class="line">      userAgent.includes(&quot;windows nt 6.2&quot;) ||</span><br><span class="line">      userAgent.includes(&quot;windows nt 10.0&quot;)</span><br><span class="line">    ) &#123;</span><br><span class="line">         version = &quot;Windows 10&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">         version = &quot;Unknown&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return version === v||&quot;Windows 7&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;用于检测用户设备的函数，传入v&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    <category term="前端" scheme="https://merlinahh.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="js" scheme="https://merlinahh.github.io/tags/js/"/>
    
    <category term="笔记" scheme="https://merlinahh.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Linux 系统安装及升级 node / yarn</title>
    <link href="https://merlinahh.github.io/2019/03/05/Linux-install-node-yarn/"/>
    <id>https://merlinahh.github.io/2019/03/05/Linux-install-node-yarn/</id>
    <published>2019-03-05T04:50:02.000Z</published>
    <updated>2022-02-16T22:22:26.705Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装-yarn-node"><a href="#安装-yarn-node" class="headerlink" title="安装 yarn + node"></a>安装 yarn + node</h1><p>在 CentOS 7.4 系统上安装 yarn，先建立一个 yum repo 的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | sudo tee /etc/yum.repos.d/yarn.repo</span><br></pre></td></tr></table></figure><h2 id="安装-node"><a href="#安装-node" class="headerlink" title="安装 node"></a>安装 node</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y nodejs</span><br></pre></td></tr></table></figure><h2 id="安装yarn"><a href="#安装yarn" class="headerlink" title="安装yarn"></a>安装yarn</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum search yarn  搜索 yarn 软件包</span><br><span class="line">yum info yarn      显示当前的 yarn 软件包信息</span><br><span class="line">yum install yarn   安装 yarn 软件包</span><br><span class="line">yarn --version    显示已安装的 yarn 软件包版本信息</span><br></pre></td></tr></table></figure><h2 id="升级-node"><a href="#升级-node" class="headerlink" title="升级 node"></a>升级 node</h2><ol><li>安装 node 管理器 n</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn global add n</span><br></pre></td></tr></table></figure><ol start="2"><li>查找 node 安装位置</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">which node</span><br><span class="line">    data/home/server/nodejs</span><br></pre></td></tr></table></figure><ol start="3"><li>编辑环境变量配置文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line">    export N_PREFIX=/data/home/server/nodejs #node 实际安装位置</span><br><span class="line">    export PATH=$N_PREFIX/bin:$PATH</span><br></pre></td></tr></table></figure><p>:wq 保存退出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure><p>确认环境变量是否生效</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo $N_PREFIX</span><br><span class="line">    /data/home/server/nodejs</span><br></pre></td></tr></table></figure><h1 id="n-模块常用命令"><a href="#n-模块常用命令" class="headerlink" title="n 模块常用命令"></a>n 模块常用命令</h1><table><thead><tr><th align="left">n</th><th align="left">查看已安装版本</th></tr></thead><tbody><tr><td align="left">n latest</td><td align="left">安装 node 最新版本</td></tr><tr><td align="left">n -a x86 latest</td><td align="left">As above but force 32 bit architecture</td></tr><tr><td align="left">n stable</td><td align="left">安装稳定版</td></tr><tr><td align="left">n lts</td><td align="left">Install or activate the latest LTS node release</td></tr><tr><td align="left">n <version></td><td align="left">安装指定版本</td></tr><tr><td align="left">n use <version> [args …]</td><td align="left">使用指定版本</td></tr><tr><td align="left">n bin <version></td><td align="left">Output bin path for <version></td></tr><tr><td align="left">n rm &lt;version …&gt;</td><td align="left">删除指定版本</td></tr><tr><td align="left">n prune</td><td align="left">Remove all versions except the current version</td></tr><tr><td align="left">n –latest</td><td align="left">Output the latest node version available</td></tr><tr><td align="left">n –stable</td><td align="left">Output the latest stable node version available</td></tr><tr><td align="left">n –lts</td><td align="left">Output the latest LTS node version available</td></tr><tr><td align="left">n ls</td><td align="left">Output the versions of node available</td></tr></tbody></table><h1 id="yarn-与-npm"><a href="#yarn-与-npm" class="headerlink" title="yarn 与 npm"></a>yarn 与 npm</h1><h2 id="yarn的简介"><a href="#yarn的简介" class="headerlink" title="yarn的简介"></a><strong>yarn的简介</strong></h2><p>Yarn是facebook发布的一款取代npm的包管理工具。</p><h2 id="yarn的特点"><a href="#yarn的特点" class="headerlink" title="yarn的特点"></a><strong>yarn的特点</strong></h2><p>速度超快。Yarn 缓存了每个下载过的包，所以再次使用时无需重复下载。 同时利用并行下载以最大化资源利用率，因此安装速度更快。</p><p>超级安全。在执行代码之前，Yarn 会通过算法校验每个安装包的完整性。</p><p>超级可靠。使用详细、简洁的锁文件格式和明确的安装算法，Yarn 能够保证在不同系统上无差异的工作。</p><h2 id="yarn的安装"><a href="#yarn的安装" class="headerlink" title="yarn的安装"></a><strong>yarn的安装</strong></h2><p>下载node.js，使用npm安装：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yarn</span><br></pre></td></tr></table></figure><p>查看版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn --version</span><br></pre></td></tr></table></figure><p>安装node.js,下载yarn的安装程序:</p><p>提供一个.msi文件，在运行时将引导您在Windows上安装Yarn</p><p>Yarn 淘宝源安装，分别复制粘贴以下代码行到黑窗口运行即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn config set registry https://registry.npm.taobao.org -g</span><br><span class="line"></span><br><span class="line">yarn config set sass_binary_site http://cdn.npm.taobao.org/dist/node-sass -g</span><br></pre></td></tr></table></figure><h2 id="yarn的常用命令"><a href="#yarn的常用命令" class="headerlink" title="yarn的常用命令"></a><strong>yarn的常用命令</strong></h2><p>安装yarn：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g yarn</span><br></pre></td></tr></table></figure><p>安装成功后，查看版本号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn --version</span><br></pre></td></tr></table></figure><p>创建文件夹 yarn：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md yarn</span><br></pre></td></tr></table></figure><p>进入yarn文件夹：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd yarn</span><br></pre></td></tr></table></figure><p>初始化项目：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn init // 同npm init，执行输入信息后，会生成package.json文件</span><br></pre></td></tr></table></figure><h2 id="yarn的配置项"><a href="#yarn的配置项" class="headerlink" title="yarn的配置项"></a><strong>yarn的配置项</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yarn config list // 显示所有配置项</span><br><span class="line">yarn config get &lt;key&gt; //显示某配置项</span><br><span class="line">yarn config delete &lt;key&gt; //删除某配置项</span><br><span class="line">yarn config set &lt;key&gt; &lt;value&gt; [-g|--global] //设置配置项</span><br></pre></td></tr></table></figure><h2 id="安装包"><a href="#安装包" class="headerlink" title="安装包"></a><strong>安装包</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yarn install //安装package.json里所有包，并将包及它的所有依赖项保存进yarn.lock</span><br><span class="line">yarn install --flat //安装一个包的单一版本</span><br><span class="line">yarn install --force //强制重新下载所有包</span><br><span class="line">yarn install --production //只安装dependencies里的包</span><br><span class="line">yarn install --no-lockfile //不读取或生成yarn.lock</span><br><span class="line">yarn install --pure-lockfile //不生成yarn.lock</span><br></pre></td></tr></table></figure><h2 id="添加包（会更新package-json和yarn-lock）"><a href="#添加包（会更新package-json和yarn-lock）" class="headerlink" title="添加包（会更新package.json和yarn.lock）"></a><strong>添加包（会更新package.json和yarn.lock）</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add [package] // 在当前的项目中添加一个依赖包，会自动更新到package.json和yarn.lock文件中</span><br><span class="line">yarn add [package]@[version] // 安装指定版本，这里指的是主要版本，如果需要精确到小版本，使用-E参数</span><br><span class="line">yarn add [package]@[tag] // 安装某个tag（比如beta,next或者latest）</span><br></pre></td></tr></table></figure><p>不指定依赖类型默认安装到dependencies里，你也可以指定依赖类型：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yarn add --dev/-D // 加到 devDependencies</span><br><span class="line">yarn add --peer/-P // 加到 peerDependencies</span><br><span class="line">yarn add --optional/-O // 加到 optionalDependencies</span><br></pre></td></tr></table></figure><p>默认安装包的主要版本里的最新版本，下面两个命令可以指定版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add --exact/-E // 安装包的精确版本。例如yarn add foo@1.2.3会接受1.9.1版，但是yarn add foo@1.2.3 --exact只会接受1.2.3版</span><br><span class="line">yarn add --tilde/-T // 安装包的次要版本里的最新版。例如yarn add foo@1.2.3 --tilde会接受1.2.9，但不接受1.3.0</span><br></pre></td></tr></table></figure><h2 id="发布包"><a href="#发布包" class="headerlink" title="发布包"></a><strong>发布包</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn publish</span><br></pre></td></tr></table></figure><h2 id="移除一个包"><a href="#移除一个包" class="headerlink" title="移除一个包"></a><strong>移除一个包</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn remove &lt;packageName&gt;</span><br></pre></td></tr></table></figure><p>移除一个包，会自动更新package.json和yarn.lock</p><h2 id="更新一个依赖"><a href="#更新一个依赖" class="headerlink" title="更新一个依赖"></a><strong>更新一个依赖</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn upgrade</span><br></pre></td></tr></table></figure><p>用于更新包到基于规范范围的最新版本</p><h2 id="运行脚本"><a href="#运行脚本" class="headerlink" title="运行脚本"></a><strong>运行脚本</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn run </span><br></pre></td></tr></table></figure><p>用来执行在 package.json 中 scripts 属性下定义的脚本</p><h2 id="显示某个包的信息"><a href="#显示某个包的信息" class="headerlink" title="显示某个包的信息"></a><strong>显示某个包的信息</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn info &lt;packageName&gt; </span><br></pre></td></tr></table></figure><p>可以用来查看某个模块的最新版本信息</p><h2 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a><strong>缓存</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yarn cache</span><br><span class="line">yarn cache list # 列出已缓存的每个包 </span><br><span class="line">yarn cache dir # 返回 全局缓存位置 </span><br><span class="line">yarn cache clean # 清除缓存</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装-yarn-node&quot;&gt;&lt;a href=&quot;#安装-yarn-node&quot; class=&quot;headerlink&quot; title=&quot;安装 yarn + node&quot;&gt;&lt;/a&gt;安装 yarn + node&lt;/h1&gt;&lt;p&gt;在 CentOS 7.4 系统上安装 yarn，先建</summary>
      
    
    
    
    <category term="服务器" scheme="https://merlinahh.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="Linux" scheme="https://merlinahh.github.io/tags/Linux/"/>
    
    <category term="Node.js" scheme="https://merlinahh.github.io/tags/Node-js/"/>
    
    <category term="yarn" scheme="https://merlinahh.github.io/tags/yarn/"/>
    
  </entry>
  
  <entry>
    <title>Linux scp命令</title>
    <link href="https://merlinahh.github.io/2019/03/02/Linux-scp/"/>
    <id>https://merlinahh.github.io/2019/03/02/Linux-scp/</id>
    <published>2019-03-02T06:45:37.000Z</published>
    <updated>2024-02-28T00:43:45.212Z</updated>
    
    <content type="html"><![CDATA[<p>Linux scp 命令用于 Linux 之间复制文件和目录。</p><p>scp 是 secure copy 的缩写, scp 是 linux 系统下基于 ssh 登陆进行安全的远程文件拷贝命令。</p><p>scp 是加密的，rcp 是不加密的，scp 是 rcp 的加强版。</p><p>语法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp [-1246BCpqrv] [-c cipher] [-F ssh_config] [-i identity_file]</span><br><span class="line">[-l limit] [-o ssh_option] [-P port] [-S program]</span><br><span class="line">[[user@]host1:]file1 [...] [[user@]host2:]file2</span><br></pre></td></tr></table></figure><p>简易写法:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp [可选参数] file_source file_target </span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-1： 强制scp命令使用协议ssh1</span><br><span class="line">-2： 强制scp命令使用协议ssh2</span><br><span class="line">-4： 强制scp命令只使用IPv4寻址</span><br><span class="line">-6： 强制scp命令只使用IPv6寻址</span><br><span class="line">-B： 使用批处理模式（传输过程中不询问传输口令或短语）</span><br><span class="line">-C： 允许压缩。（将-C标志传递给ssh，从而打开压缩功能）</span><br><span class="line">-p：保留原文件的修改时间，访问时间和访问权限。</span><br><span class="line">-q： 不显示传输进度条。</span><br><span class="line">-r： 递归复制整个目录。</span><br><span class="line">-v：详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。</span><br><span class="line">-c cipher： 以cipher将数据传输进行加密，这个选项将直接传递给ssh。</span><br><span class="line">-F ssh_config： 指定一个替代的ssh配置文件，此参数直接传递给ssh。</span><br><span class="line">-i identity_file： 从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。</span><br><span class="line">-l limit： 限定用户所能使用的带宽，以Kbit/s为单位。</span><br><span class="line">-o ssh_option： 如果习惯于使用ssh_config(5)中的参数传递方式，</span><br><span class="line">-P port：注意是大写的P, port是指定数据传输用到的端口号</span><br><span class="line">-S program： 指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。</span><br></pre></td></tr></table></figure><p>实例</p><h1 id="从本地复制到远程"><a href="#从本地复制到远程" class="headerlink" title="从本地复制到远程"></a>从本地复制到远程</h1><p>命令格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp local_file remote_username@remote_ip:remote_folder </span><br></pre></td></tr></table></figure><p>或者 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp local_file remote_username@remote_ip:remote_file </span><br></pre></td></tr></table></figure><p>或者 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp local_file remote_ip:remote_folder </span><br></pre></td></tr></table></figure><p>或者 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp local_file remote_ip:remote_file </span><br></pre></td></tr></table></figure><p>第1,2个指定了用户名，命令执行后需要再输入密码，第1个仅指定了远程的目录，文件名字不变，第2个指定了文件名；</p><p>第3,4个没有指定用户名，命令执行后需要输入用户名和密码，第3个仅指定了远程的目录，文件名字不变，第4个指定了文件名；</p><p>应用实例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scp /home/space/music/1.mp3 root@www.runoob.com:/home/root/others/music </span><br><span class="line">scp /home/space/music/1.mp3 root@www.runoob.com:/home/root/others/music/001.mp3 </span><br><span class="line">scp /home/space/music/1.mp3 www.runoob.com:/home/root/others/music </span><br><span class="line">scp /home/space/music/1.mp3 www.runoob.com:/home/root/others/music/001.mp3 </span><br></pre></td></tr></table></figure><p>复制目录命令格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r local_folder remote_username@remote_ip:remote_folder </span><br></pre></td></tr></table></figure><p>或者 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r local_folder remote_ip:remote_folder </span><br></pre></td></tr></table></figure><p>第1个指定了用户名，命令执行后需要再输入密码；</p><p>第2个没有指定用户名，命令执行后需要输入用户名和密码；</p><p>应用实例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r /home/space/music/ root@www.runoob.com:/home/root/others/ </span><br><span class="line">scp -r /home/space/music/ www.runoob.com:/home/root/others/ </span><br></pre></td></tr></table></figure><p>上面命令将本地 music 目录复制到远程 others 目录下。</p><h1 id="从远程复制到本地"><a href="#从远程复制到本地" class="headerlink" title="从远程复制到本地"></a>从远程复制到本地</h1><p>从远程复制到本地，只要将从本地复制到远程的命令的后2个参数调换顺序即可，如下实例</p><p>应用实例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp root@www.runoob.com:/home/root/others/music /home/space/music/1.mp3 </span><br><span class="line">scp -r www.runoob.com:/home/root/others/ /home/space/music/</span><br></pre></td></tr></table></figure><p>说明</p><ol><li>如果远程服务器防火墙有为scp命令设置了指定的端口，我们需要使用 -P 参数来设置命令的端口号，命令格式如下：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#scp 命令使用端口号 4588</span><br><span class="line">scp -P 4588 remote@www.runoob.com:/usr/local/sin.sh /home/administrator</span><br></pre></td></tr></table></figure></li><li>使用scp命令要确保使用的用户具有可读取远程服务器相应文件的权限，否则scp命令是无法起作用的。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Linux scp 命令用于 Linux 之间复制文件和目录。&lt;/p&gt;
&lt;p&gt;scp 是 secure copy 的缩写, scp 是 linux 系统下基于 ssh 登陆进行安全的远程文件拷贝命令。&lt;/p&gt;
&lt;p&gt;scp 是加密的，rcp 是不加密的，scp 是 rcp </summary>
      
    
    
    
    <category term="服务器" scheme="https://merlinahh.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="Linux" scheme="https://merlinahh.github.io/tags/Linux/"/>
    
    <category term="scp" scheme="https://merlinahh.github.io/tags/scp/"/>
    
  </entry>
  
  <entry>
    <title>时间戳转时间格式函数</title>
    <link href="https://merlinahh.github.io/2019/02/17/timestamp-to-time/"/>
    <id>https://merlinahh.github.io/2019/02/17/timestamp-to-time/</id>
    <published>2019-02-17T06:47:51.000Z</published>
    <updated>2022-02-17T07:41:48.608Z</updated>
    
    <content type="html"><![CDATA[<p>封装好项目需要用到时可以直接调用的函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">function timestampToTime(timestamp) &#123;</span><br><span class="line">  const date = new Date(timestamp * 1000); // 时间戳为10位需*1000, 时间戳为13位的话不需乘1000</span><br><span class="line">  const Y = date.getFullYear() + &quot;-&quot;;</span><br><span class="line">  const M =</span><br><span class="line">    (date.getMonth() + 1 &lt; 10</span><br><span class="line">      ? &quot;0&quot; + (date.getMonth() + 1)</span><br><span class="line">      : date.getMonth() + 1) + &quot;-&quot;;</span><br><span class="line">  const D = (date.getDate() &lt; 10 ? &quot;0&quot; + date.getDate() : date.getDate()) + &quot; &quot;;</span><br><span class="line"></span><br><span class="line">  const h =</span><br><span class="line">    (date.getHours() &lt; 10 ? &quot;0&quot; + date.getHours() : date.getHours()) + &quot;:&quot;;</span><br><span class="line">  const m =</span><br><span class="line">    (date.getMinutes() &lt; 10 ? &quot;0&quot; + date.getMinutes() : date.getMinutes()) +</span><br><span class="line">    &quot;:&quot;;</span><br><span class="line">  const s =</span><br><span class="line">    date.getSeconds() &lt; 10 ? &quot;0&quot; + date.getSeconds() : date.getSeconds();</span><br><span class="line">  return Y + M + D + h + m + s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;封装好项目需要用到时可以直接调用的函数&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    <category term="前端" scheme="https://merlinahh.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="js" scheme="https://merlinahh.github.io/tags/js/"/>
    
    <category term="笔记" scheme="https://merlinahh.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Linux 用户管理及用户权限设置</title>
    <link href="https://merlinahh.github.io/2019/02/17/Linux-user-sudo/"/>
    <id>https://merlinahh.github.io/2019/02/17/Linux-user-sudo/</id>
    <published>2019-02-17T00:49:41.000Z</published>
    <updated>2024-02-28T00:43:56.557Z</updated>
    
    <content type="html"><![CDATA[<p>Linux 系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。</p><p>用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组织文件，并为用户提供安全性保护。</p><p>每个用户账号都拥有一个惟一的用户名和各自的口令。</p><p>用户在登录时键入正确的用户名和口令后，就能够进入系统和自己的主目录。</p><h2 id="实现用户账号的管理，要完成的工作主要有如下几个方面："><a href="#实现用户账号的管理，要完成的工作主要有如下几个方面：" class="headerlink" title="实现用户账号的管理，要完成的工作主要有如下几个方面："></a>实现用户账号的管理，要完成的工作主要有如下几个方面：</h2><ol><li><p>用户账号的添加、删除与修改。</p></li><li><p>用户口令的管理。</p></li><li><p>用户组的管理。</p></li></ol><p>注：此说明适用于Debian、Redhat、suse、Ubuntu、Fedora等众多linux系统，并对多少位没有区别。</p><h2 id="用户分类："><a href="#用户分类：" class="headerlink" title="用户分类："></a>用户分类：</h2><ol><li>超级用户 UID=0 root</li><li>普通用户 UID500起。由超级用户或者具有超级用户权限的用户创建的用户</li><li>虚拟用户 UID 1-499 存在满足文件或服务启动的需要。一般不能登录系统，只是傀儡</li><li>用户关联的四个文件：/etc/passwd  /etc/shadow  /etc/group  /etc/gshadow</li></ol><h1 id="一、管理用户命令汇总："><a href="#一、管理用户命令汇总：" class="headerlink" title="一、管理用户命令汇总："></a>一、管理用户命令汇总：</h1><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">useradd</td><td align="left">同adduser命令，执行此命令可在系统中添加用户</td></tr><tr><td align="left">userdel</td><td align="left">删除用户及相关用户的配置文件</td></tr><tr><td align="left">passwd</td><td align="left">为用户设置密码。更改/etc/shadow</td></tr><tr><td align="left">chage</td><td align="left">修改用户密码有效期限。管理/etc/shadow</td></tr><tr><td align="left">usermod</td><td align="left">修改用户命令，可以通过usermod来修改登录名，用户的家目录等等</td></tr><tr><td align="left">id</td><td align="left">查看用户的UID , GID及所归属的用户组</td></tr><tr><td align="left">su</td><td align="left">用户角色切换命令</td></tr><tr><td align="left">sudo</td><td align="left">sudo是通过另一个用户来执行命令，su是用户来切换用户，然后通过切换到的用户来完成相应的任务，但sudo能在命令后面直接接命令执行，如：sudo ls /root，不需要root密码就可以执行只有root才能执行相应的命令或具备的目录权限；这个权限需要通过visudo命令或编辑/etc/sudoers来实现</td></tr><tr><td align="left">visudo</td><td align="left">visudo配置sudo权限的编辑命令；也可以不用这个命令，直接用vi来编辑/etc/sudoers实现。但推荐用visudo来操作（会自动检查语法）</td></tr></tbody></table><p>其它与用户管理相关的命令，可了解，但不要深入研究！掌握重点即可！</p><h1 id="二、-etc-skel-目录"><a href="#二、-etc-skel-目录" class="headerlink" title="二、/etc/skel 目录"></a>二、/etc/skel 目录</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/# ll -a /etc/skel</span><br><span class="line">    total 40</span><br><span class="line">    drwxr-xr-x   2 root root  4096 Dec  1 10:13 ./</span><br><span class="line">    drwxr-xr-x 142 root root 12288 Jan 25 16:19 ../</span><br><span class="line">    -rw-r--r--   1 root root   220 Sep  1  2015 .bash_logout</span><br><span class="line">    -rw-r--r--   1 root root  3771 Sep  1  2015 .bashrc</span><br><span class="line">    -rw-r--r--   1 root root  8980 Apr 20  2016 examples.desktop</span><br><span class="line">    -rw-r--r--   1 root root   655 May 16  2017 .profile</span><br></pre></td></tr></table></figure><p>作用：/etc/skel 目录是用来存放新用户配置文件的目录，当我们添加新用户时，这个目录下的所有文件会自动被复制到新添加的用户的家目录下；默认情况下/etc/skel 目录下的所有文件都是隐藏文件（以点开头的文件）；通过修改，添加，删除/etc/skel目录下的文件，我们可为新创建的用户提供统一的，标准的，初始化用户环境。</p><p><strong>企业面试题：当新建了一个用户，该用户登录时出现如下提示：请问是什么原因？如何解决？</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@gin ~]# su - gin</span><br><span class="line">    -bash-4.1$</span><br><span class="line">    -bash-4.1$</span><br></pre></td></tr></table></figure><p>解答：出现这种情况的原因是环境变量有问题，解决方案就是拷贝/etc/skel目录下以bash开头的文件到当前用户的家目录即可！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos home]# mkdir /home/gin</span><br><span class="line">[root@centos home]# cp -a /etc/skel/.bash* ./gin</span><br><span class="line">[root@centos home]# chmod -R 700 gin</span><br><span class="line">[root@centos home]# chown gin:gin -R gin</span><br></pre></td></tr></table></figure><h1 id="三、-etc-login-defs配置文件"><a href="#三、-etc-login-defs配置文件" class="headerlink" title="三、/etc/login.defs配置文件"></a>三、/etc/login.defs配置文件</h1><p>/etc/login.defs 是设置用户帐号限制的文件。该文件里的配置对root用户无效。</p><p>如果/etc/shadow文件里有相同的选项，则以/etc/shadow里的设置为准，也就是说/etc/shadow的配置优先级高于/etc/login.defs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"># *REQUIRED* required</span><br><span class="line">#  Directory where mailboxes reside, _or_ name of file, relative to the</span><br><span class="line">#   home directory.  If you _do_ define both, MAIL_DIR takes precedence.</span><br><span class="line">#   QMAIL_DIR is for Qmail</span><br><span class="line">#</span><br><span class="line">#QMAIL_DIR      Maildir</span><br><span class="line">MAIL_DIR        /var/spool/mail</span><br><span class="line">#创建用户时，要在目录/var/spool/mail中创建一个用户mail文件</span><br><span class="line">#MAIL_FILE      .mail</span><br><span class="line"> </span><br><span class="line"># Password aging controls:</span><br><span class="line">#</span><br><span class="line">#       PASS_MAX_DAYS   Maximum number of days a password may be used.</span><br><span class="line">#       PASS_MIN_DAYS   Minimum number of days allowed between password changes.</span><br><span class="line">#       PASS_MIN_LEN    Minimum acceptable password length.</span><br><span class="line">#       PASS_WARN_AGE   Number of days warning given before a password expires.</span><br><span class="line">#</span><br><span class="line">PASS_MAX_DAYS   99999</span><br><span class="line">#密码最大有效期</span><br><span class="line">PASS_MIN_DAYS   0</span><br><span class="line">#两次修改密码的最小间隔时间</span><br><span class="line">PASS_MIN_LEN    5</span><br><span class="line">#密码最小长度，对于root无效</span><br><span class="line">PASS_WARN_AGE   7</span><br><span class="line">#密码过期前多少天开始提示</span><br><span class="line">#</span><br><span class="line"># Min/max values for automatic uid selection in useradd</span><br><span class="line">#创建用户时不指定UID的话自动UID的范围</span><br><span class="line">UID_MIN                   500</span><br><span class="line">#用户ID的最小值</span><br><span class="line">UID_MAX                 60000</span><br><span class="line">#用户ID的最大值</span><br><span class="line">#</span><br><span class="line"># Min/max values for automatic gid selection in groupadd</span><br><span class="line">#自动组ID的范围</span><br><span class="line">GID_MIN                   500</span><br><span class="line">#组ID的最小值</span><br><span class="line">GID_MAX                 60000</span><br><span class="line">#组ID的最大值</span><br><span class="line"> </span><br><span class="line">#</span><br><span class="line"># If defined, this command is run when removing a user.</span><br><span class="line"># It should remove any at/cron/print jobs etc. owned by</span><br><span class="line"># the user to be removed (passed as the first argument).</span><br><span class="line">#</span><br><span class="line">#USERDEL_CMD    /usr/sbin/userdel_local</span><br><span class="line">#当删除用户的时候执行的脚本</span><br><span class="line"> </span><br><span class="line">#</span><br><span class="line"># If useradd should create home directories for users by default</span><br><span class="line"># On RH systems, we do. This option is overridden with the -m flag on</span><br><span class="line"># useradd command line.</span><br><span class="line">#</span><br><span class="line">CREATE_HOME     yes</span><br><span class="line">#使用useradd的时候是够创建用户目录</span><br><span class="line"> </span><br><span class="line"># The permission mask is initialized to this value. If not specified,</span><br><span class="line"># the permission mask will be initialized to 022.</span><br><span class="line">UMASK           077</span><br><span class="line"> </span><br><span class="line"># This enables userdel to remove user groups if no members exist.</span><br><span class="line">#</span><br><span class="line">USERGROUPS_ENAB yes</span><br><span class="line">#用MD5加密密码</span><br></pre></td></tr></table></figure><p>为什么新建用户时会从该目录下拷贝文件到用户家目录呢？<br>因为有/etc/default/useradd文件的存在！~</p><h1 id="四、-etc-default-useradd-文件"><a href="#四、-etc-default-useradd-文件" class="headerlink" title="四、/etc/default/useradd 文件"></a>四、/etc/default/useradd 文件</h1><p>/etc/default/useradd 文件是在使用useradd添加用户时的一个需要调用的一个默认的配置文件，可以使用“useradd -D”参数，这样的命令格式来修改文件里的内容。该文件的内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@gin gin]# cat /etc/default/useradd</span><br><span class="line"># useradd defaults file</span><br><span class="line">GROUP=100                   ## 表示 用户组ID （依赖于/etc/login.defs的USERGROUPS_ENAB参数，如果为no，则由此处控制）</span><br><span class="line">HOME=/home                  ## 把用户家目录建在/home中</span><br><span class="line">INACTIVE=-1                 ## 是否启用账号过期停权，-1表示不启用</span><br><span class="line">EXPIRE=                     ## 账号是否启用过期设置    无表示不启用</span><br><span class="line">SHELL=/bin/bash                 ## 账号使用shell种类</span><br><span class="line">SKEL=/etc/skel                  ## 配置新用户目录的默认文件存放路径</span><br><span class="line">CREATE_MAIL_SPOOL=yes               ## 是否创建邮箱缓存  yes表示创建</span><br></pre></td></tr></table></figure><p>如：修改EXPIRE的值为2015/06/10：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Gin scripts]# useradd -D -e 2015/06/10</span><br><span class="line">[root@Gin scripts]# cat /etc/default/useradd</span><br><span class="line"># useradd defaults file</span><br><span class="line">GROUP=100</span><br><span class="line">HOME=/home</span><br><span class="line">INACTIVE=-1</span><br><span class="line">EXPIRE=2015/06/10</span><br><span class="line">SHELL=/bin/bash</span><br><span class="line">SKEL=/etc/skel</span><br><span class="line">CREATE_MAIL_SPOOL=yes</span><br></pre></td></tr></table></figure><h1 id="五、Linux系统用户账号的管理"><a href="#五、Linux系统用户账号的管理" class="headerlink" title="五、Linux系统用户账号的管理"></a>五、Linux系统用户账号的管理</h1><p>用户账号的管理工作主要涉及到用户账号的添加、修改和删除。添加用户账号就是在系统中创建一个新账号，然后为新账号分配用户号、用户组、主目录和登录Shell等资源。刚添加的账号是被锁定的，无法使用。</p><p>useradd命令修改的文件：/etc/passwd , /etc/shadow , /etc/group , /etc/gshadow</p><p>控制useradd命令默认行为的文件：/etc/default/useradd , /etc/login.defs</p><h2 id="添加新的用户账号"><a href="#添加新的用户账号" class="headerlink" title="添加新的用户账号"></a>添加新的用户账号</h2><p>当使用useradd命令不加参数选项，后面直接跟所添加的用户名时，系统首先会读取配置文件/etc/login.defs and /etc/default/useradd中的定义的参数或规则，根据设置的规则添加用户，同时会向/etc/passwd and /etc/group文件添加新建用户和用户组记录。</p><p>当然/etc/passwd and /etc/group的加密资讯文件/etc/shadow and /etc/gshadow也会同步生成记录，同时系统还会根据/etc/default/useradd文件中所配置的信息建立用户的家目录，并复制/etc/skel中的所有文件（包括隐藏的环境配置文件）到新用户的家目录中。</p><p>添加新用户帐号使用useradd命令，其语法及选项如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd 选项 用户名</span><br></pre></td></tr></table></figure><pre><code>-c comment 指定一段注释性描述。-d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。-g 用户组 指定用户所属的用户组。-G 用户组，用户组 指定用户所属的附加组。-s Shell文件 指定用户的登录Shell。-u 用户号 指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识号。-e expire_date 账号终止日期，日期的指定格式为 MM/DD/YY-f inactive_days 账号过期几日后永久停权。当值为0时账号则立刻停权。为-1时则关闭此功能，预设值为-1-m 自动建立用户的登入目录。-M 不要自动建立用户的登入目录。-n 取消建立以用户名称为名的群组。-r 创建系统账户</code></pre><h3 id="例1：-d-m参数的使用"><a href="#例1：-d-m参数的使用" class="headerlink" title="例1：-d , -m参数的使用"></a>例1：-d , -m参数的使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd –d /home/olcs -m sam</span><br></pre></td></tr></table></figure><p>此命令创建了一个用户sam，<br>其中-d和-m选项用来为登录名sam产生一个主目录/home/olcs（/home为默认的用户主目录所在的父目录）。</p><h3 id="例2：-s-G参数的使用"><a href="#例2：-s-G参数的使用" class="headerlink" title="例2：-s , -G参数的使用"></a>例2：-s , -G参数的使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -s /bin/bash -g olcs –G olcs,root gem</span><br></pre></td></tr></table></figure><p>此命令新建了一个用户gem，该用户的登录Shell是/bin/bash，它属于olcs用户组，同时又属于root用户组，其中olcs用户组是其主组。</p><h3 id="例3：-e参数的使用-（指定账户什么时候过期）"><a href="#例3：-e参数的使用-（指定账户什么时候过期）" class="headerlink" title="例3：-e参数的使用 （指定账户什么时候过期）"></a>例3：-e参数的使用 （指定账户什么时候过期）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Andy andy]# date -s 01/18/2012            #修改系统时间</span><br><span class="line">[root@Andy andy]# useradd tmpuser1 -e 01/19/12      #增加一个tmpuser1用户，并指定2012年1月19号过期</span><br><span class="line">[root@Andy andy]# date -s 01/21/12</span><br><span class="line">Sat Jan 21 00:00:00 CST 2012</span><br></pre></td></tr></table></figure><p>#系统更改时间为2012年1月21号，而上面建立的用户过期时间是2012年1月19号，此时切换到tmpuser1用户，发现还是可以登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@Andy andy]# chage -l tmpuser1</span><br><span class="line">Last password change                                    : Jan 17, 2012</span><br><span class="line">Password expires                                        : never</span><br><span class="line">Password inactive                                       : never</span><br><span class="line">Account expires                                         : Jan 19, 2012   #过期时间的确是19号，设置没错</span><br><span class="line">Minimum number of days between password change          : 0</span><br><span class="line">Maximum number of days between password change          : 99999</span><br><span class="line">Number of days of warning before password expires       : 7</span><br></pre></td></tr></table></figure><p>为什么还是可以切换到tmpuser1用户呢？<br>1）通过-e设置后无法远程SSH连接，但是可以用 su 切换，账户并未被锁定<br>2）账户过期时间和系统时间，需要相差2天(该测试是在CentOS5.x版本，CentOS6版本不相差2天)<br>再次测试：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Andy andy]# useradd tmpuser2 -e 01/22/12</span><br><span class="line">[root@Andy andy]# passwd tmpuser2</span><br></pre></td></tr></table></figure><p>我们在SSH客户端用tmpuser2登录，不要用su进行切换！为了让账户过期，我们再次修改系统时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Andy andy]# date -s 01/23/12</span><br><span class="line">[root@Andy andy]# clock -w          #重新读取系统时间</span><br><span class="line">[root@Andy andy]# date +%F</span><br><span class="line">2012-01-23</span><br></pre></td></tr></table></figure><p>当tmpuser2账户退出登录后，再次登录时，就会提示：</p><p>Your account has expired; please contact your system administrator</p><p>用户的过期时间当然也可以使用usermod命令来修改：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@gin gin]# usermod -e &quot;216/10/10&quot; zhangsansan</span><br></pre></td></tr></table></figure><p>指定用户过期时间</p><h3 id="例4：useradd-c-u-G-s-d-多个参数组合例子"><a href="#例4：useradd-c-u-G-s-d-多个参数组合例子" class="headerlink" title="例4：useradd -c -u -G -s -d 多个参数组合例子"></a>例4：useradd -c -u -G -s -d 多个参数组合例子</h3><p>自定义用户的家目录，shell类型，所归属的用户组等：添加用户poe6，并设置其用户注释信息为HandsomeBoy，UID指定为806，归属为用户组root , poe , sa成员，其shell类型为/bin/sh，设置家目录为/poe6</p><p>[root@gin gin]# useradd -c “HandsomeBoy” -u 806 -G root,poe,sa -s /bin/sh -d /poe6 poe6</p><h2 id="这三个组必须要先存在"><a href="#这三个组必须要先存在" class="headerlink" title="这三个组必须要先存在"></a>这三个组必须要先存在</h2><p>增加用户账号就是在/etc/passwd文件中为新用户增加一条记录，同时更新其他系统文件如/etc/shadow, /etc/group等。</p><p>Linux提供了集成的系统管理工具userconf，它可以用来对用户账号进行统一管理。</p><p>生产场景中创建用户的完整命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Andy andy]# groupadd -g 801 sa</span><br><span class="line">[root@Andy andy]# useradd -g sa -u 901 ett</span><br><span class="line">[root@Andy andy]# echo &quot;who123&quot;|passwd --stdin ett</span><br><span class="line">Changing password for user ett.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@Andy andy]# visudo -c</span><br><span class="line">[root@Andy andy]# history -c</span><br></pre></td></tr></table></figure><h2 id="删除帐号"><a href="#删除帐号" class="headerlink" title="删除帐号"></a>删除帐号</h2><p>如果一个用户的账号不再使用，可以从系统中删除。删除用户账号就是要将/etc/passwd等系统文件中的该用户记录删除，必要时还删除用户的主目录。删除一个已有的用户账号使用userdel命令，其格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel 选项 用户名</span><br></pre></td></tr></table></figure><p>常用的选项是-r，它的作用是把用户的主目录一起删除。</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">userdel -r olcs</span><br></pre></td></tr></table></figure><p>此命令删除用户olcs在系统文件中（主要是/etc/passwd, /etc/shadow, /etc/group等）的记录，同时删除用户的主目录。</p><h2 id="修改帐号"><a href="#修改帐号" class="headerlink" title="修改帐号"></a>修改帐号</h2><p>修改用户账号就是根据实际情况更改用户的有关属性，如用户号、主目录、用户组、登录Shell等。</p><p>修改已有用户的信息使用usermod命令，其格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod 选项 用户名</span><br></pre></td></tr></table></figure><p>常用的选项包括-c, -d, -m, -g, -G, -s, -u以及-o等，这些选项的意义与useradd命令中的选项一样，可以为用户指定新的资源值。</p><p>另外，有些系统可以使用如下选项：</p><table><thead><tr><th align="left">usermod参数选项</th><th align="left">注释说明</th></tr></thead><tbody><tr><td align="left">-c  comment</td><td align="left">增加用户账号/etc/passwd中的注解说明栏（第5栏）</td></tr><tr><td align="left">-d  home_dir</td><td align="left">更新用户新的家目录，组合-m选项，用户旧的家目录会搬到新的家目录去，如旧的家目录不存在则创建新的家目录</td></tr><tr><td align="left">-e  expire_date</td><td align="left">加上用户账号停止日期。格式为MM/DD/YY</td></tr><tr><td align="left">-f  inactive_days</td><td align="left">账号过期几日后永久停权。当值为0时账号则立刻被停权。而当值为-1时则关闭此功能。预设值为-1</td></tr><tr><td align="left">-g  initial_group</td><td align="left">更新用户的起始登入用户组。用户组名须已存在。用户组ID必须参照既有的用户组，用户组ID预设值为1</td></tr><tr><td align="left">-G  group.[..]</td><td align="left">定义用户为一堆groups的成员，每个用户组使用逗号分隔</td></tr><tr><td align="left">-l  login_name</td><td align="left">修改用户login时的名称为login_name，其余信息不变</td></tr><tr><td align="left">-s  shell</td><td align="left">指定登录shell</td></tr><tr><td align="left">-u  uid</td><td align="left">指定用户UID值。除非接-o参数（usermode -u 505 -o andy），否则ID值必须是唯一的数字（不能为负数）</td></tr><tr><td align="left">-L</td><td align="left">冻结用户的密码。实际就是间接修改/etc/shadow的密码栏。在密码栏的开头加上！号，即表示冻结。这个冻结密码的功能和usermod -e , useradd -e , chage -E , passwd -l 等命令参数都有类似的功效，那就是让用户无法正常登陆</td></tr><tr><td align="left">-U</td><td align="left">取消冻结的密码，使之恢复登陆，实际同样是修改/etc/shadow的密码栏，在密码栏的开头取消“！ ”号，即表示恢复</td></tr></tbody></table><h3 id="实例1：usermod-c修改-etc-passwd中用户的说明栏"><a href="#实例1：usermod-c修改-etc-passwd中用户的说明栏" class="headerlink" title="实例1：usermod -c修改/etc/passwd中用户的说明栏"></a>实例1：usermod -c修改/etc/passwd中用户的说明栏</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@bruce bruce]# tail -1 /etc/passwd         #--&gt;为了进行对比，在修改前进行查看</span><br><span class="line">andy:x:802:803::/home/andy:/bin/bash</span><br><span class="line">[root@centos andy]# usermod -c &quot;AndyLaw&quot; andy</span><br><span class="line">[root@bruce bruce]# tail -1 /etc/passwd</span><br><span class="line">andy:x:802:803:AndyLaw:/home/andy:/bin/bash</span><br></pre></td></tr></table></figure><h3 id="实例2：测试-c-u-G-s-d等参数！要求添加用户andy6，并设置用户注释为HandsomeBoy，UID指定为806，归属为用户组root，andy-sa成员，其shell类型为-bin-sh，设置家目录为-andy6"><a href="#实例2：测试-c-u-G-s-d等参数！要求添加用户andy6，并设置用户注释为HandsomeBoy，UID指定为806，归属为用户组root，andy-sa成员，其shell类型为-bin-sh，设置家目录为-andy6" class="headerlink" title="实例2：测试 -c , -u , -G , -s , -d等参数！要求添加用户andy6，并设置用户注释为HandsomeBoy，UID指定为806，归属为用户组root，andy , sa成员，其shell类型为/bin/sh，设置家目录为/andy6"></a>实例2：测试 -c , -u , -G , -s , -d等参数！要求添加用户andy6，并设置用户注释为HandsomeBoy，UID指定为806，归属为用户组root，andy , sa成员，其shell类型为/bin/sh，设置家目录为/andy6</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@bruce bruce]# useradd -c HandsomeBoy -u 806 -s /bin/sh -G root,andy,sa -d /andy6 andy6</span><br><span class="line">[root@bruce bruce]# grep andy6 /etc/passwd</span><br><span class="line">andy6:x:806:806:HandsomeBoy:/andy6:/bin/sh</span><br><span class="line">[root@bruce bruce]# id andy6</span><br><span class="line">uid=806(andy6) gid=806(andy6) groups=806(andy6),0(root),803(andy),804(sa)</span><br></pre></td></tr></table></figure><p>提示：在添加新用户时，如果不使用-n参数，系统会自动创建一个与用户同名的用户组，如本例就自动生成了一个andy6的用户组</p><p>下面使用usermod命令进行修改 : 要求注释改为uptowngirl，UID修改为1806，归属修改为用户组root , sa成员，其shell类型修改为/bin/tcsh，设置家目录为/tmp/andy6：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@bruce bruce]# usermod -c uptowngirl -u 1806 -G root,sa -s /bin/tcsh -d /tmp/andy6</span><br></pre></td></tr></table></figure><h3 id="实例3：使用户在2016-11-15后过期-usermod-e"><a href="#实例3：使用户在2016-11-15后过期-usermod-e" class="headerlink" title="实例3：使用户在2016-11-15后过期 usermod -e"></a>实例3：使用户在2016-11-15后过期 usermod -e</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@bruce bruce]# usermod -e 2016-11-26 andy6</span><br><span class="line">[root@bruce bruce]# chage -l andy6</span><br><span class="line">Last password change                                    : Nov 24, 2016</span><br><span class="line">Password expires                                        : never</span><br><span class="line">Password inactive                                       : never</span><br><span class="line">Account expires                                         : Nov 26, 2016</span><br><span class="line">Minimum number of days between password change          : 0</span><br><span class="line">Maximum number of days between password change          : 99999</span><br><span class="line">Number of days of warning before password expires       : 7</span><br></pre></td></tr></table></figure><h3 id="实例4：冻结andy6用户的密码-usermod-L"><a href="#实例4：冻结andy6用户的密码-usermod-L" class="headerlink" title="实例4：冻结andy6用户的密码 usermod -L"></a>实例4：冻结andy6用户的密码 usermod -L</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@bruce bruce]# grep andy6 /etc/shadow</span><br><span class="line">andy6:$6$V/bwRYJd$aUnJt/DUupmwv00G8kCzmqg61Z0GWCU7aNp7rgeA.YFb2PROvqcZM.WVIlqZjesmIfQgoJR/QoL6b.VdrLybd.:17129:0:99999:7::17131:</span><br><span class="line">[root@bruce bruce]# usermod -L andy6</span><br><span class="line">[root@bruce bruce]# grep andy6 /etc/shadow</span><br><span class="line">andy6:!$6$V/bwRYJd$aUnJt/DUupmwv00G8kCzmqg61Z0GWCU7aNp7rgeA.YFb2PROvqcZM.WVIlqZjesmIfQgoJR/QoL6b.VdrLybd.:17129:0:99999:7::17131:</span><br><span class="line">[root@bruce bruce]# usermod -U andy6</span><br></pre></td></tr></table></figure><h2 id="用户口令的管理"><a href="#用户口令的管理" class="headerlink" title="用户口令的管理"></a>用户口令的管理</h2><p>用户管理的一项重要内容是用户口令的管理。用户账号刚创建时没有口令，但是被系统锁定，无法使用，必须为其指定口令后才可以使用，即使是指定空口令。</p><p>指定和修改用户口令的Shell命令是passwd。超级用户可以为自己和其他用户指定口令，普通用户只能用它修改自己的口令。命令的格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd 选项 用户名</span><br></pre></td></tr></table></figure><p>可使用的选项：</p><pre><code>-l , --lock 锁定口令，即禁用账号。-u , --unlock 口令解锁。-d , --delete 使账号无口令。-f , --force 强迫用户下次登录时修改口令。--stdin 从stdin读入密码 (root only) , 如果默认用户名，则修改当前用户的口令。-n , --minimun=DAYS 两次密码修改的最小天数，后面接数字，仅root权限操作-x , --maximun=DAYS     两次密码修改的最大天数，后面接数字，仅root权限操作-w , --warning=DAYS     在距多少天提醒用户修改密码，仅root权限操作-i ，--inactive=DASY 在密码过期后多少天，用户被禁掉，仅root权限操作-S , --status               查询用户的密码状态，仅root权限操作</code></pre><h3 id="实例1：我们用-l参数来锁定andy用户，使之不能修改密码，然后再用-u参数来解除锁定"><a href="#实例1：我们用-l参数来锁定andy用户，使之不能修改密码，然后再用-u参数来解除锁定" class="headerlink" title="实例1：我们用-l参数来锁定andy用户，使之不能修改密码，然后再用-u参数来解除锁定"></a>实例1：我们用-l参数来锁定andy用户，使之不能修改密码，然后再用-u参数来解除锁定</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@bruce bruce]# passwd -S andy              #锁定前查看andy账户的状态</span><br><span class="line">andy PS 2016-11-24 0 99999 7 -1 (Password set, SHA512 crypt.)</span><br><span class="line">[root@bruce bruce]# grep andy /etc/shadow       #查看andy账户的密码状态</span><br><span class="line">andy:$6$i5dcb9oB$6U2HlaHJqIVZWZNElMgzab.Y7M5nALaE/PT54kq2hrrP6hGjmbQhoqVktDTlX5Kxt.JyB.RNlm.7PkYFO7odG0:17129:0:99999:7:::</span><br><span class="line">[root@bruce bruce]# passwd -l andy</span><br><span class="line">Locking password for user andy.</span><br><span class="line">passwd: Success</span><br><span class="line">[root@bruce bruce]# grep andy /etc/shadow       #再次查看密码状态，发现密码前多了两个!!号</span><br><span class="line">andy:!!$6$i5dcb9oB$6U2HlaHJqIVZWZNElMgzab.Y7M5nALaE/PT54kq2hrrP6hGjmbQhoqVktDTlX5Kxt.JyB.RNlm.7PkYFO7odG0:17129:0:99999:7:::</span><br></pre></td></tr></table></figure><p>#锁定之后，用andy账户登录系统，再修改密码会提示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[andy@bruce ~]$ passwd</span><br><span class="line">passwd: Authentication token manipulation error</span><br></pre></td></tr></table></figure><p>#解除锁定</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@bruce bruce]# passwd -u andy</span><br><span class="line">Unlocking password for user andy.</span><br><span class="line">passwd: Success</span><br><span class="line">[root@bruce bruce]# grep andy /etc/shadow       #解除锁定后，/etc/shadow文件中密码字段前面两个！！号消失</span><br><span class="line">andy:$6$i5dcb9oB$6U2HlaHJqIVZWZNElMgzab.Y7M5nALaE/PT54kq2hrrP6hGjmbQhoqVktDTlX5Kxt.JyB.RNlm.7PkYFO7odG0:17129:0:99999:7:::</span><br></pre></td></tr></table></figure><h3 id="实例2：举一个组合参数-x-n-w-i控制密码时效的例子。要求andy用户7天内不能更改密码，60天以后必须修改密码，过期前10天通知andy用户，过期后30天后禁止用户登陆"><a href="#实例2：举一个组合参数-x-n-w-i控制密码时效的例子。要求andy用户7天内不能更改密码，60天以后必须修改密码，过期前10天通知andy用户，过期后30天后禁止用户登陆" class="headerlink" title="实例2：举一个组合参数-x -n -w -i控制密码时效的例子。要求andy用户7天内不能更改密码，60天以后必须修改密码，过期前10天通知andy用户，过期后30天后禁止用户登陆"></a>实例2：举一个组合参数-x -n -w -i控制密码时效的例子。要求andy用户7天内不能更改密码，60天以后必须修改密码，过期前10天通知andy用户，过期后30天后禁止用户登陆</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@bruce bruce]# passwd -n 7 -x 60 -w 10 -i 30 andy</span><br><span class="line">Adjusting aging data for user andy.</span><br><span class="line">passwd: Success</span><br></pre></td></tr></table></figure><p>#当然使用chage命令也可以实现同样的效果只是参数略有不同：chage -m 7 -M 60 -W 10 -I 30 andy</p><p>在root账户下修改andy的密码，然后回到andy账户，再次修改密码出现如下提示：</p><p>passwd: Authentication token manipulation error</p><p>例如，假设当前用户是olcs，则下面的命令修改该用户自己的口令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ passwd</span><br><span class="line">Old password:******</span><br><span class="line">New password:*******</span><br><span class="line">Re-enter new password:*******</span><br></pre></td></tr></table></figure><p>如果是超级用户，可以用下列形式指定任何用户的口令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># passwd olcs</span><br><span class="line">New password:*******</span><br><span class="line">Re-enter new password:*******</span><br></pre></td></tr></table></figure><p>普通用户修改自己的口令时，passwd命令会先询问原口令，验证后再要求用户输入两遍新口令，如果两次输入的口令一致，则将这个口令指定给用户；而超级用户为用户指定口令时，就不需要知道原口令。</p><p>为了系统安全起见，用户应该选择比较复杂的口令，例如最好使用8位长的口令，口令中包含有大写、小写字母和数字，并且应该与姓名、生日等不相同。</p><p>为用户指定空口令时，执行下列形式的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># passwd -d sam</span><br></pre></td></tr></table></figure><p>此命令将用户sam的口令删除，这样用户sam下一次登录时，系统就不再询问口令。<br>passwd命令还可以用-l(lock)选项锁定某一用户，使其不能登录，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># passwd -l olcs</span><br></pre></td></tr></table></figure><p>–stdin方式修改设置密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@gin gin]# echo 123456|passwd --stdin gin</span><br><span class="line">Changing password for user gin.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@gin gin]# echo 123 &gt; p.log</span><br><span class="line">[root@gin gin]# passwd --stdin gin &lt; p.log</span><br><span class="line">Changing password for user gin.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br></pre></td></tr></table></figure><p>备注：/usr/bin/passwd  是修改用户密码的程序 密码记录在 /etc/shadow</p><p> /etc/passwd是用户数据库，其中的域给出了用户名、加密口令和用户的其他信息. /etc/shadow是在安装了影子(shadow)口令软件的系统上的影子口令文件。影子口令文件将/etc/passwd 文件中的加密口令移动到/etc/shadow中，而后者只对超级用户( r o o t )可读。</p><p> Linux /etc/shadow文件中的记录行与/etc/passwd中的一一对应,它由pwconv命令根据/etc/passwd中的数据自动产生。</p><h2 id="口令时效"><a href="#口令时效" class="headerlink" title="口令时效"></a>口令时效</h2><p>口令时效是系统管理员用来防止机构内不良口令的一种技术。在Linux系统上，口令时效是通过chage命令来管理的，格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chage [option] username </span><br></pre></td></tr></table></figure><p>下面列出了chage命令的选项说明：</p><pre><code>-m days： 指定用户必须改变口令所间隔的最少天数。如果值为0，口令就不会过期。-M days： 指定口令有效的最多天数。当该选项指定的天数加上-d选项指定的天数小于当前的日期时，用户在使用该帐号前就必须改变口令。-d days： 指定从1970年1月1日起，口令被改变的天数。-E date： 指定帐号被锁的日期。日期格式YYYY-MM-DD。若不用日期，也可以使用自1970年1月1日后经过的天数。-W days： 指定口令过期前要警告用户的天数。-I --inactive： 在密码过期后多少天，用户被禁掉，仅能以root操作-l --list ：显示账户年龄信息</code></pre><p>该命令记住两个参数-E , -l即可，其它的选项可以使用passwd来替代！</p><p>例如下面的命令要求用户user1两天内不能更改口令，并且口令最长的存活期为30天，口令过期前5天通知用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chage -m 2 -M 30 -W 5 user1</span><br></pre></td></tr></table></figure><p>可以使用如下命令查看用户user1当前的口令时效信息：chage -l user1</p><p><strong>提示：</strong></p><p>1）可以使用chage 进入交互模式修改用户的口令时效。</p><p>2）修改口令实质上就是修改影子口令文件/etc/shadow中与口令时效相关的字段值。</p><h1 id="Linux系统用户组的管理"><a href="#Linux系统用户组的管理" class="headerlink" title="Linux系统用户组的管理"></a>Linux系统用户组的管理</h1><p>每个用户都有一个用户组，系统可以对一个用户组中的所有用户进行集中管理。不同Linux 系统对用户组的规定有所不同，如Linux下的用户属于与它同名的用户组，这个用户组在创建用户时同时创建。用户组的管理涉及用户组的添加、删除和修改。组的增加、删除和修改实际上就是对/etc/group文件的更新。</p><table><thead><tr><th align="left">参数选项</th><th align="left">注释说明</th></tr></thead><tbody><tr><td align="left">-g</td><td align="left">指定用户组GID值。除非接-o参数（如：groupadd -g 1234 -o andy），否则ID值必须是唯一的数字（不能为负数）。如果不指定-g参数，则预设值会从500开始。</td></tr><tr><td align="left">-r</td><td align="left">建立系统用户组。GID值会比/etc/login.defs中定义的UID_MIN值小。如：groupadd -r ett;grep ett /etc/group #–&gt;分号分隔两个命令 ett:x:105: #–&gt;GID为105，小于500了</td></tr><tr><td align="left">-f</td><td align="left">新增一个账户，强制覆盖一个已经存在的用户组账号。</td></tr></tbody></table><h2 id="增加一个新的用户组"><a href="#增加一个新的用户组" class="headerlink" title="增加一个新的用户组"></a>增加一个新的用户组</h2><p>增加一个新的用户组使用groupadd命令，其格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd 选项 用户组</span><br></pre></td></tr></table></figure><p>可以使用的选项有：</p><pre><code>-g GID 指定新用户组的组标识号（GID）。-o 一般与-g选项同时使用，表示新用户组的GID可以与系统已有用户组的GID相同。</code></pre><h3 id="例1："><a href="#例1：" class="headerlink" title="例1："></a>例1：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># groupadd olcs</span><br></pre></td></tr></table></figure><p>此命令向系统中增加了一个新组olcs，新组的组标识号是在当前已有的最大组标识号的基础上加1。</p><h3 id="例2："><a href="#例2：" class="headerlink" title="例2："></a>例2：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#groupadd -g 101 group1</span><br></pre></td></tr></table></figure><p>此命令向系统中增加了一个新组group2，同时指定新组的组标识号是101。</p><h2 id="删除已有用户组"><a href="#删除已有用户组" class="headerlink" title="删除已有用户组"></a>删除已有用户组</h2><p>如果要删除一个已有的用户组，使用groupdel命令，其格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupdel 用户组</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#groupdel group1</span><br></pre></td></tr></table></figure><p>此命令从系统中删除组group1。</p><h2 id="修改用户组的属性"><a href="#修改用户组的属性" class="headerlink" title="修改用户组的属性"></a>修改用户组的属性</h2><p>修改用户组的属性使用groupmod命令。其语法如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupmod 选项 用户组</span><br></pre></td></tr></table></figure><p>常用的选项有：</p><pre><code>-g GID 为用户组指定新的组标识号。-o 与-g选项同时使用，用户组的新GID可以与系统已有用户组的GID相同。-n新用户组 将用户组的名字改为新名字</code></pre><h3 id="例1：-1"><a href="#例1：-1" class="headerlink" title="例1："></a>例1：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># groupmod -g 102 group1</span><br></pre></td></tr></table></figure><p>此命令将组group1的组标识号修改为102。</p><h3 id="例2：-1"><a href="#例2：-1" class="headerlink" title="例2："></a>例2：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># groupmod –g 10000 -n group2 group1</span><br></pre></td></tr></table></figure><p>此命令将组group1的标识号改为10000，组名修改为group2。</p><h2 id="用户在用户组间切换"><a href="#用户在用户组间切换" class="headerlink" title="用户在用户组间切换"></a>用户在用户组间切换</h2><p>如果一个用户同时属于多个用户组，那么用户可以在用户组之间切换，以便具有其他用户组的权限。用户可以在登录后，使用命令newgrp切换到其他用户组，这个命令的参数就是目的用户组。例如： </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ newgrp root</span><br></pre></td></tr></table></figure><p>这条命令将当前用户切换到root用户组，前提条件是root用户组确实是该用户的主组或附加组。类似于用户账号的管理，用户组的管理也可以通过集成的系统管理工具来完成。让Linux系统中的普通用户也有超级用户的权限</p><h1 id="目录权限管理"><a href="#目录权限管理" class="headerlink" title="目录权限管理"></a>目录权限管理</h1><h2 id="3种基本权限"><a href="#3种基本权限" class="headerlink" title="3种基本权限"></a>3种基本权限</h2><p>在Linux中，将使用系统资源的人员分为4类：超级用户、文件或目录的属主、属主的同组人和其他人员。超级用户拥有对Linux系统一切操作权限，对于其他3类用户都要指定对文件和目录的访问权限。</p><table><thead><tr><th align="left">代表字符</th><th>对应数值</th><th>权限</th><th>对文件的含义</th><th>对目录的含义</th></tr></thead><tbody><tr><td align="left">r</td><td>4</td><td>读</td><td>可以读文件的内容</td><td>可以列出目录中的文件列表</td></tr><tr><td align="left">w</td><td>2</td><td>写</td><td>可以修改该文件</td><td>可以在目录中创建删除文件</td></tr><tr><td align="left">x</td><td>1</td><td>可执行</td><td>可以执行该文件</td><td>可以使用cd命令进入该目录</td></tr><tr><td align="left">-</td><td>0</td><td>无</td><td></td><td></td></tr></tbody></table><h2 id="查看文件和目录的权限"><a href="#查看文件和目录的权限" class="headerlink" title="查看文件和目录的权限"></a>查看文件和目录的权限</h2><p>可以使用带l参数的ls命令查看文件或目录的权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Gin scripts]# ll /gin</span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x 2 root root 4096 Jan 28 23:15 python</span><br><span class="line">drwxr-xr-x 2 root root 4096 Feb  1 13:11 scripts</span><br><span class="line">drwxr-xr-x 5 root root 4096 Jan 25 18:01 tools</span><br></pre></td></tr></table></figure><p>每一行显示一个文件或目录的信息，这些信息包括文件的类型、文件的权限、文件的属主和文件的所属组，还有文件的大小以及创建时间和文件名。输出列表中每 一行第一列的第一个字母指示了该文件的类型。各种文件类型及代表字符如下：</p><ul><li>-：普通文件    </li><li>b：块文件设备，是特殊的文件类型</li><li>d：目录文件 ，事实上在ext2fs中，目录是一个特殊的文件</li><li>c：字符文件设备 ，是特殊的文件类型</li><li>l：符号链接文件，实际上它指向另一个文件</li><li>s、p：管道文件，这些文件关系到系统的数据结构和管道，通常很少见到</li></ul><p>第一列的其余9个字母可分为三组，3个字母一组，这3组分别代表：文件属主的权限、文件所属组的权限和其他用户的权限。每组中的3个栏位分别表示读、 写、执行权限。</p><p>第2～10个字符当中的每3个为一组，左边三个字符表示所有者权限，中间3个字符表示与所有者同一组的用户的权限，右边3个字符是其他用户的权限。这三个一组共9个字符，代表的意义如下：</p><p>r(Read，读取)：对文件而言，具有读取文件内容的权限；对目录来说，具有浏览目录的权限。</p><p>w(Write,写入)：对文件而言，具有新增、修改文件内容的权限；对目录来说，具有删除、移动目录内文件的权限。</p><p>x(eXecute，执行)：对文件而言，具有执行文件的权限；对目录了来说该用户具有进入目录的权限。</p><p>－：表示不具有该项权限。</p><h2 id="更改操作权限（chmod-chown）"><a href="#更改操作权限（chmod-chown）" class="headerlink" title="更改操作权限（chmod/chown）"></a>更改操作权限（chmod/chown）</h2><p>系统管理员和文件属主可以根据需要来设置文件的权限，有两种设置方法：文字设定法和数值设定法。</p><h3 id="文字设定法"><a href="#文字设定法" class="headerlink" title="文字设定法"></a>文字设定法</h3><p>chomd的文字设定法的格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod [ugoa][+-=][rwxugo]</span><br></pre></td></tr></table></figure><p>第1个选项表示要赋予权限的用户，具体说明如下：<br>    u：属主      g：所属组用户      o：其他用户      a：所有用户<br>第2个选项表示要进行的操作，具体说明如下：<br>    +：增加权限      -：删除权限      =：分配权限，同时将原有权限删除<br>第3个选项是要分配的权限，具体说明如下：<br>    r/x/w：允许读取/写入/执行        u/g/o：和属主/所属组用户/其他用户的权限相同<br>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod go -r users      //取消组用户和其他用户对文件users的读取权限</span><br><span class="line">chmod u+x users      //对文件users的属主增加招待权限</span><br><span class="line">chmod u+x,go-r users      //对文件users的属主添加执行权限，同时取消组用户和其他用户对文件的读取权限</span><br></pre></td></tr></table></figure><h3 id="数值设定法"><a href="#数值设定法" class="headerlink" title="数值设定法"></a>数值设定法</h3><p>chmod的数值设定法的格式为：chmod n1n2n3<br>其中n1、n2、n3分别代表属主的权限、组用户的权限和其他用户的权限，这三个选项都是八进制数字。</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 adduser      //对文件adduser的属设置可读、写和执行的权限，所属组和其他用户只设置读和执行权限，没有写权限</span><br><span class="line">chmod 600 user1         //取消组用户和其他用户对文件user1的一切权限（原权限为-rw-rCrC）</span><br></pre></td></tr></table></figure><p>备注：如想一次修改某个目录下所有文件的权限，包括子目录中的文件权限也要修改，要使用参数－R表示启动递归处理。</p><p>网站搬家特别是从虚拟空间或windows上搬到linux VPS上会出现文件权限问题，通常目录都是755权限，文件是644权限。<br>首先cd到你要修改的网站目录，然后运行如下两个命令即可快速批量修改权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find -type d|xargs chmod 755</span><br><span class="line">find -type f|xargs chmod 644</span><br></pre></td></tr></table></figure><h2 id="更改属组或同组人"><a href="#更改属组或同组人" class="headerlink" title="更改属组或同组人"></a>更改属组或同组人</h2><p>改变文件的属主和组可以用chown命令，命令格式为：chown [-R] 。</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chown osmond user1      //将文件user1的属主改为osmond</span><br><span class="line">chown osmond.osmond user1      //将文件user1的属主和组都改成osmond</span><br><span class="line">chown -R osmond.osmond mydir      //将mydir目录及其子目录下的所有文件或目录的属主和组都改成osmond</span><br></pre></td></tr></table></figure><h2 id="设置文件和目录的生成掩码"><a href="#设置文件和目录的生成掩码" class="headerlink" title="设置文件和目录的生成掩码"></a>设置文件和目录的生成掩码</h2><p>用户可以使用umask命令设置文件夹的默认生成掩码。默认的生成掩码告诉系统当创建一个文件或目录时不应该赋予哪些权限。如果用户将umask命令放在环境文件（.bash_profile）中，就可以控制所有的新建文件或目录的访问权限。其命令格式为：umask [u1u2u3]其中，u1、u2、u3分别表示的是不允许属主有的权限、不允许同组人有的权限和不允许其他人有的权限。</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umask 022      //设置不允许同组用户和其他用户有写权限 umask            //显示当前的默认生成掩码</span><br></pre></td></tr></table></figure><p>用法非常简单，只需执行umask 777 命令，便代表屏蔽所有的权限，因而之后建立的文件或目录，其权限都变成000，依次类推。通常root帐号搭配umask命令的数值为022、027和077，普通用户则是采用002，这样所产生的权限依次为755、750、700、775。</p><p>用户登录系统时，用户环境就会自动执行rmask命令来决定文件、目录的默认权限。</p><h2 id="特殊权限设置"><a href="#特殊权限设置" class="headerlink" title="特殊权限设置"></a>特殊权限设置</h2><h3 id="SUID、SGID和sticky-bit"><a href="#SUID、SGID和sticky-bit" class="headerlink" title="SUID、SGID和sticky-bit"></a>SUID、SGID和sticky-bit</h3><p>除了上述的基本权限之外，还有所谓的特殊权限存在。由于特殊权限会拥有一些“特权”，因而用户若无特殊需要，不应该去打开这些权限，避免安全方面出现严重漏洞，甚至摧毁系统。下面列出了3个特殊权限的说明：</p><p>SUID：当一个设置了SUID位的可执行文件被执行时，该文件以所有者的身份运行，也就是说无论谁来执行这个文件，他都拥有文件所有者的特权，可以任意存取该文件拥有者能使用的全部系统资源。如果所有者是root，那么执行人就有超级用户的特权了。</p><p>SGID：当一个设置了SGID位的可执行文件被执行时，该文件将具有所属组的特权，任意存取整个组所能使用的系统资源；若一个目录设置了SGID，则所有被复制到这个目录下的文件，其所属的组都会被重设为和这个目录一样，除非在复制文件时加上-p（preserve，保留文件属性）参数，才能保留原来 所属的群组设置。</p><p>sticky-bit：对一个文件设置了sticky-bit之后，尽管其他用户有写权限，也必须由属主执行删除、移动等操作，对一个目录设置了 sticky-bit之后，存放在该目录下的文件仅允许其属主执行删除、移动等操作。</p><p>一个设置了SUID的典型例子是passwd程序，它允许普通用户改变自己的口令，这是通过改变/etc/shadow文件的口令字段来实现的。然而系 统管理员决不允许普通用户拥有直接改变/etc/shadow文件的权限。解决方法是将passwd程序设置SUID，当passwd被执行时将拥有超级用户的权限，而passwd程序运行结束又回到普通用户的权限，下面是显示passwd程序的权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Gin scripts]# ll /usr/bin/passwd</span><br><span class="line">-rwsr-xr-x. 1 root root 30768 Feb 22  2012 /usr/bin/passwd</span><br></pre></td></tr></table></figure><p>一个设置了sticky-bit的典型例子是系统临时文件目录/tmp，这避免了不守法的用户存心搞鬼，恣意乱删其他用户存放的文件。下面显示/tmp 目录的权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Gin scripts]# ll -d /tmp</span><br><span class="line">drwxrwxrwt. 8 root root 4096 Feb  1 18:04 /tmp</span><br></pre></td></tr></table></figure><h3 id="SUID、SGID和sticky-bit的表示"><a href="#SUID、SGID和sticky-bit的表示" class="headerlink" title="SUID、SGID和sticky-bit的表示"></a>SUID、SGID和sticky-bit的表示</h3><p>从上面的显示可以看出，SUID是占用属主的x位置为表示的；SGID是占用组的x位置来表示的；sticky-bit是占用其他人的x位置来表示 的。在表示上有大小定之分，假若同时设置执行权限和SUID、SGID和sticky-bit，权限标识字符是小写的；倘若关闭执行权限，则标识字符会变成大写。</p><h3 id="设置特殊权限"><a href="#设置特殊权限" class="headerlink" title="设置特殊权限"></a>设置特殊权限</h3><p>使用chmod命令设置特殊权限，仍然有字符设定法和数值设定法之分。使用字符设定法时，可以使用s和t权限字符，</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod u+s /usr/bin/myapp      //为程序/usr/bin/myapp添加SUID权限</span><br><span class="line">chmod g+s /home/groupspace      //为目录/home/groupspace添加SGID权限</span><br><span class="line">chmod o+t /home/share      //为目录/home/share添加sticky-bit权限</span><br></pre></td></tr></table></figure><p>使用chmod的数值设定法时，要使用4位八进制数值，其中第一位八进制数用于设置特殊权限，后三位八进制数用于设置基本权限。</p><p>例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod 4755 /usr/bin/myapp      //设置SUID</span><br><span class="line">chmod 2755 /home/groupspace      //设置SGID</span><br><span class="line">chmod 1755 /home/share     //设置sticky-bit</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Linux 系统是一个多用户多任务的分时操作系统，任何一个要使用系统资源的用户，都必须首先向系统管理员申请一个账号，然后以这个账号的身份进入系统。&lt;/p&gt;
&lt;p&gt;用户的账号一方面可以帮助系统管理员对使用系统的用户进行跟踪，并控制他们对系统资源的访问；另一方面也可以帮助用户组</summary>
      
    
    
    
    <category term="服务器" scheme="https://merlinahh.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="Linux" scheme="https://merlinahh.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux 系统 Nginx 安装与配置</title>
    <link href="https://merlinahh.github.io/2019/02/14/Linux-install-Nginx/"/>
    <id>https://merlinahh.github.io/2019/02/14/Linux-install-Nginx/</id>
    <published>2019-02-13T20:29:14.000Z</published>
    <updated>2024-02-28T00:43:33.346Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Nginx-安装"><a href="#Nginx-安装" class="headerlink" title="Nginx 安装"></a>Nginx 安装</h1><p>系统平台：CentOS release 6.6 (Final) 64位。</p><h2 id="一、安装编译工具及库文件"><a href="#一、安装编译工具及库文件" class="headerlink" title="一、安装编译工具及库文件"></a>一、安装编译工具及库文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install make zlib zlib-devel gcc-c++ libtool  openssl openssl-devel</span><br></pre></td></tr></table></figure><h2 id="二、首先要安装-PCRE"><a href="#二、首先要安装-PCRE" class="headerlink" title="二、首先要安装 PCRE"></a>二、首先要安装 PCRE</h2><p>PCRE 作用是让 Nginx 支持 Rewrite 功能。</p><ol><li>下载 PCRE 安装包，下载地址： <a href="http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz">http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</a></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src/</span><br><span class="line">wget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre-8.35.tar.gz</span><br></pre></td></tr></table></figure><ol start="2"><li>解压安装包</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf pcre-8.35.tar.gz</span><br></pre></td></tr></table></figure><p>3、进入安装包目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd pcre-8.35</span><br></pre></td></tr></table></figure><ol start="4"><li>编译安装 </li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ol start="5"><li>查看pcre版本</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pcre-config --version</span><br></pre></td></tr></table></figure><h2 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h2><ol><li>下载 Nginx，下载地址：<a href="https://nginx.org/en/download.html">https://nginx.org/en/download.html</a></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src/</span><br><span class="line">wget http://nginx.org/download/nginx-1.6.2.tar.gz</span><br></pre></td></tr></table></figure><ol start="2"><li>解压安装包</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf nginx-1.6.2.tar.gz</span><br></pre></td></tr></table></figure><ol start="3"><li>进入安装包目录</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.6.2</span><br></pre></td></tr></table></figure><ol start="4"><li>编译安装</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/webserver/nginx --with-http_stub_status_module --with-http_ssl_module --with-pcre=/usr/local/src/pcre-8.35</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><ol start="5"><li>查看nginx版本</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/webserver/nginx/sbin/nginx -v</span><br></pre></td></tr></table></figure><p>到此，nginx安装完成。</p><h1 id="Nginx-配置"><a href="#Nginx-配置" class="headerlink" title="Nginx 配置"></a>Nginx 配置</h1><h2 id="创建-Nginx-运行使用的用户-www"><a href="#创建-Nginx-运行使用的用户-www" class="headerlink" title="创建 Nginx 运行使用的用户 www"></a>创建 Nginx 运行使用的用户 www</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/sbin/groupadd www </span><br><span class="line">/usr/sbin/useradd -g www www</span><br></pre></td></tr></table></figure><h2 id="配置nginx-conf"><a href="#配置nginx-conf" class="headerlink" title="配置nginx.conf"></a>配置nginx.conf</h2><p>将/usr/local/webserver/nginx/conf/nginx.conf替换为以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">cat /usr/local/webserver/nginx/conf/nginx.conf</span><br><span class="line"></span><br><span class="line">user www www;</span><br><span class="line">worker_processes 2; #设置值和CPU核心数一致</span><br><span class="line">error_log /usr/local/webserver/nginx/logs/nginx_error.log crit; #日志位置和日志级别</span><br><span class="line">pid /usr/local/webserver/nginx/nginx.pid;</span><br><span class="line">#Specifies the value for maximum file descriptors that can be opened by this process.</span><br><span class="line">worker_rlimit_nofile 65535;</span><br><span class="line">events</span><br><span class="line">&#123;</span><br><span class="line">    use epoll;</span><br><span class="line">    worker_connections 65535;</span><br><span class="line">&#125;</span><br><span class="line">http</span><br><span class="line">&#123;</span><br><span class="line">    include mime.types;</span><br><span class="line">    default_type application/octet-stream;</span><br><span class="line">    log_format main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                &#x27;&quot;$http_user_agent&quot; $http_x_forwarded_for&#x27;;</span><br><span class="line">    </span><br><span class="line">    #charset gb2312;</span><br><span class="line">        </span><br><span class="line">    server_names_hash_bucket_size 128;</span><br><span class="line">    client_header_buffer_size 32k;</span><br><span class="line">    large_client_header_buffers 4 32k;</span><br><span class="line">    client_max_body_size 8m;</span><br><span class="line">        </span><br><span class="line">    sendfile on;</span><br><span class="line">    tcp_nopush on;</span><br><span class="line">    keepalive_timeout 60;</span><br><span class="line">    tcp_nodelay on;</span><br><span class="line">    fastcgi_connect_timeout 300;</span><br><span class="line">    fastcgi_send_timeout 300;</span><br><span class="line">    fastcgi_read_timeout 300;</span><br><span class="line">    fastcgi_buffer_size 64k;</span><br><span class="line">    fastcgi_buffers 4 64k;</span><br><span class="line">    fastcgi_busy_buffers_size 128k;</span><br><span class="line">    fastcgi_temp_file_write_size 128k;</span><br><span class="line">    gzip on; </span><br><span class="line">    gzip_min_length 1k;</span><br><span class="line">    gzip_buffers 4 16k;</span><br><span class="line">    gzip_http_version 1.0;</span><br><span class="line">    gzip_comp_level 2;</span><br><span class="line">    gzip_types text/plain application/x-javascript text/css application/xml;</span><br><span class="line">    gzip_vary on;</span><br><span class="line">    </span><br><span class="line">    #limit_zone crawler $binary_remote_addr 10m;</span><br><span class="line">    #下面是server虚拟主机的配置</span><br><span class="line">    server</span><br><span class="line">    &#123;</span><br><span class="line">        listen 80;#监听端口</span><br><span class="line">        server_name localhost;#域名</span><br><span class="line">        index index.html index.htm index.php;</span><br><span class="line">        root /usr/local/webserver/nginx/html;#站点目录</span><br><span class="line">        location ~ .*\.(php|php5)?$</span><br><span class="line">        &#123;</span><br><span class="line">        #fastcgi_pass unix:/tmp/php-cgi.sock;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        include fastcgi.conf;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|ico)$</span><br><span class="line">        &#123;</span><br><span class="line">        expires 30d;</span><br><span class="line">    # access_log off;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ .*\.(js|css)?$</span><br><span class="line">        &#123;</span><br><span class="line">        expires 15d;</span><br><span class="line">    # access_log off;</span><br><span class="line">        &#125;</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="检查配置文件nginx-conf的正确性："><a href="#检查配置文件nginx-conf的正确性：" class="headerlink" title="检查配置文件nginx.conf的正确性："></a>检查配置文件nginx.conf的正确性：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/webserver/nginx/sbin/nginx -t</span><br></pre></td></tr></table></figure><h2 id="启动-Nginx"><a href="#启动-Nginx" class="headerlink" title="启动 Nginx"></a>启动 Nginx</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/webserver/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><h2 id="访问站点"><a href="#访问站点" class="headerlink" title="访问站点"></a>访问站点</h2><p>从浏览器访问我们配置的站点ip：<br><img src="/2019/02/14/Linux-install-Nginx/1.png"><br>显示<code>Welcome to nginx</code>即配置成功</p><h2 id="Nginx-其他命令"><a href="#Nginx-其他命令" class="headerlink" title="Nginx 其他命令"></a>Nginx 其他命令</h2><p>以下包含了 Nginx 常用的几个命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/webserver/nginx/sbin/nginx -s reload            # 重新载入配置文件</span><br><span class="line">/usr/local/webserver/nginx/sbin/nginx -s reopen            # 重启 Nginx</span><br><span class="line">/usr/local/webserver/nginx/sbin/nginx -s stop              # 停止 Nginx</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Nginx-安装&quot;&gt;&lt;a href=&quot;#Nginx-安装&quot; class=&quot;headerlink&quot; title=&quot;Nginx 安装&quot;&gt;&lt;/a&gt;Nginx 安装&lt;/h1&gt;&lt;p&gt;系统平台：CentOS release 6.6 (Final) 64位。&lt;/p&gt;
&lt;h2 i</summary>
      
    
    
    
    <category term="服务器" scheme="https://merlinahh.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="Linux" scheme="https://merlinahh.github.io/tags/Linux/"/>
    
    <category term="Nginx" scheme="https://merlinahh.github.io/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Linux 浅尝 —— 网站项目搭建初期知识整理，客户端服务器交互原理</title>
    <link href="https://merlinahh.github.io/2019/02/14/linux-study/"/>
    <id>https://merlinahh.github.io/2019/02/14/linux-study/</id>
    <published>2019-02-13T17:48:25.000Z</published>
    <updated>2024-02-28T00:43:52.002Z</updated>
    
    <content type="html"><![CDATA[<h1 id="服务器目录"><a href="#服务器目录" class="headerlink" title="服务器目录"></a>服务器目录</h1><pre><code>./etc  配置文件/bin 就是常用命令/home  用户文件的根目录   相当于win的我的文档/usr   额外安装的linux软件/srv 一般是我们自己创建的  表示服务 阿里云自带一个空的srv目录</code></pre><h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><p>所谓网络  本质就是共享数据</p><p>起初  主机都是单机的</p><p>之所以叫计算机</p><p>是因为最早之前只能用来计算</p><h1 id="局域网"><a href="#局域网" class="headerlink" title="局域网"></a>局域网</h1><p>一个主机可以访问另一个主机了</p><p>它们互相连接 组成了局域网</p><h1 id="互联网"><a href="#互联网" class="headerlink" title="互联网"></a>互联网</h1><p>再发展就是互联网</p><p>但本质上还是一个主机和另一个主机的连接数据交换</p><p><img src="/2019/02/14/linux-study/1.png" alt="互联网"></p><h1 id="客户端和服务端"><a href="#客户端和服务端" class="headerlink" title="客户端和服务端"></a>客户端和服务端</h1><p>再后来  衍生出来用户和服务</p><p>客户端和服务端的概念</p><h2 id="主机有很多操作系统："><a href="#主机有很多操作系统：" class="headerlink" title="主机有很多操作系统："></a><strong>主机有很多操作系统：</strong></h2><pre><code>* windoms利用可视化捕获一大批客户端用户* linux利用高效捕获了服务端的市场</code></pre><p>客户端和服务端跟操作系统无关的  每个操作系统都可作为客户端和服务端</p><p><strong>所以服务器的定义就是：</strong> 接受请求并返回数据的主机</p><p><img src="/2019/02/14/linux-study/2.png" alt="客户端和服务端"></p><p>那么就有人给这些主机开发服务器软件</p><p><strong>服务器软件就是：</strong>处理请求和响应的软件，一般服务器都会存在服务器软件用来提供接受请求并响应</p><p>很著名的就是Tomcat</p><p>(所有的数据库其本质也是自带了服务器功能，主要功能是把数据保存在本地，次要功能也可以接受请求并响应，不需要通过别的软件)</p><h1 id="代理"><a href="#代理" class="headerlink" title="代理"></a>代理</h1><p>在技术多变的今天，客户端和服务端就有很重要的问题 那就是安全 </p><p>于是就有了 <strong>代理</strong> 技术</p><p>所谓代理，就是客户端不想让服务端知道自己的真实地址，简单理解就是  VPN</p><p><img src="/2019/02/14/linux-study/3.png" alt="代理"></p><p>这样隐藏了真实的客户端地址和身份</p><p>游戏加速器就是这个原理</p><p>自己的地址被墙了 我们可以通过代理去请求数据 我们和代理交换数据就可以啦</p><ul><li><strong>正向代理</strong></li></ul><p>客户端主动访问 服务端被动接受请求 因为正向代理就是保护客户端的</p><p><img src="/2019/02/14/linux-study/4.png" alt="正向代理"></p><ul><li><strong>反向代理</strong></li></ul><p>客户端请求服务端 服务端用一个向外暴露的服务器去接受 然后转发到真实服务器</p><p>保护服务器真实地址</p><p><img src="/2019/02/14/linux-study/5.png" alt="反向代理"></p><h1 id="域名和域名服务器"><a href="#域名和域名服务器" class="headerlink" title="域名和域名服务器"></a>域名和域名服务器</h1><p>它隐藏了真实服务器的ip而暴露一个自定义域名 类似反向代理服务器</p><p><img src="/2019/02/14/linux-study/6.png" alt="域名和域名服务器"></p><p>域名服务器(DNS服务器)就是提供IP地址和域名之间的转换服务的服务器</p><p>域名和IP地址相互映射(这真实ip是在买域名的时候 后台可以设置的 这就叫域名解析)</p><h2 id="DNS域名解析原理"><a href="#DNS域名解析原理" class="headerlink" title="DNS域名解析原理"></a>DNS域名解析原理</h2><p>host就是本地DNS   输入网址  客户端首先找本地DNS没找到对应ip才会去网络DNS找  找到之后会带着网址向目标ip请求</p><h2 id="浏览器访问服务器原理："><a href="#浏览器访问服务器原理：" class="headerlink" title="浏览器访问服务器原理："></a><strong>浏览器访问服务器原理：</strong></h2><p><img src="/2019/02/14/linux-study/7.png" alt="DNS域名解析原理"></p><p>一个服务器请求量过大，服务器的后端程序会内存溢出，导致502</p><p>代理ip可分发到多个实际服务器ip</p><h3 id="后端有两个解决方式："><a href="#后端有两个解决方式：" class="headerlink" title="后端有两个解决方式："></a><strong>后端有两个解决方式：</strong></h3><ul><li>分布式</li></ul><p>就是把一个服务拆分为多个</p><p>一个业务分拆多个子业务，部署到不同的功能服务器，一个挂了就挂了😂 </p><p><em>（如果项目不大  它一般安装在和服务同一台服务器里  直接把请求转到本地的服务器软件里）</em></p><ul><li>集群</li></ul><p>就是部署多个项目统一管理接受请求</p><p>一套项目部署多台服务器，其中一台挂了，其他的可继续访问</p><p>假设有多个服务器作为集群 那么怎么保证所有的请求均分而不导致某一个服务器被挤爆呢</p><p><em>（如果项目特大  一般单独安装在一个服务器里  还可以实现负载均衡）</em></p><p><strong>——负载均衡</strong></p><h3 id="大型服务主要是解决两个事："><a href="#大型服务主要是解决两个事：" class="headerlink" title="大型服务主要是解决两个事："></a><strong>大型服务主要是解决两个事：</strong></h3><ul><li><strong>高吞吐</strong>就是能承载高并发的请求处理</li><li><strong>高可用</strong>就是系统的可用程度，包括安全 流畅 不出差错等等</li></ul><h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><ul><li><strong>反向代理服务器</strong></li></ul><p>反向代理服务器是它最最主要的功能，能隐藏掉其服务器真实ip和端口</p><ul><li><strong>实现负载均衡</strong></li></ul><p>反向代理服务器在做<strong>负载均衡</strong>来实现所有集群节点的平均分配</p><ul><li><strong>HTTP服务器（静态资源服务器）</strong></li></ul><p>反向代理服务器可以把请求转到本地的服务器软件里</p><p>这个服务器软件可以是Tomcat  也可以是nginx</p><p>在前后端分离的时代  也就是现在   前端页面可以丢给nginx做静态映射   后端服务可以交给tomcat</p><h2 id="正向代理"><a href="#正向代理" class="headerlink" title="正向代理"></a><strong>正向代理</strong></h2><h3 id="服务处理发展史"><a href="#服务处理发展史" class="headerlink" title="服务处理发展史"></a>服务处理发展史</h3><ol><li><strong>裸奔时代</strong><br><img src="/2019/02/14/linux-study/8.png" alt="裸奔时代"></li></ol><p>域名访问 -&gt; 服务商域名解析，通过域名找到ip -&gt; 拿到ip访问tomcat -&gt; 返回页面</p><ol start="2"><li><strong>DNS轮循</strong><br><img src="/2019/02/14/linux-study/9.png" alt="DNS轮循"></li></ol><p>1个域名映射3个ip  自带<strong>负载均衡</strong>（高吞吐 低可用）</p><p>假设一个tomcat的并发量是每秒1000，那么这个服务的并发量就是每秒3000</p><ol start="3"><li><strong>Nginx</strong><br><img src="/2019/02/14/linux-study/10.png" alt="Nginx"></li></ol><p>高吞吐 中可用</p><p>其中一个tomcat挂掉了，可正常访问，nginx挂掉了就挂掉了</p><ol start="4"><li><strong>keepalived</strong><br><img src="/2019/02/14/linux-study/11.png" alt="keepalived"></li></ol><p>keepalived实现nginx集群 挂一个还有一个</p><ol start="5"><li><strong>keepalived+lvs</strong><br><img src="/2019/02/14/linux-study/12.png" alt="keepalived+lvs"></li></ol><p>nginx被lvs负载均衡 同时还负载均衡tomcat</p><p>lvs是操作系统层面 请求不容易超过并发 同时lvs还是集群的 挂掉一个还有</p><p><strong>超高并发</strong>+<strong>超高可用</strong></p><p>给nginx集群一个负载均衡 请求会平分到各个nginx 各个nginx再反向代理+负载均衡到各个tomcat</p><h1 id="Nginx基本命令"><a href="#Nginx基本命令" class="headerlink" title="Nginx基本命令"></a><a href="/2019/02/14/Linux-install-Nginx/">Nginx基本命令</a></h1><h1 id="Linux安装和升级yarn及node"><a href="#Linux安装和升级yarn及node" class="headerlink" title="Linux安装和升级yarn及node"></a><a href="/2019/03/05/Linux-install-node-yarn/">Linux安装和升级yarn及node</a></h1><h1 id="Linux-命令大全"><a href="#Linux-命令大全" class="headerlink" title="Linux 命令大全"></a>Linux 命令大全</h1><table><thead><tr><th align="left">Linux 命令大全</th><th align="left"></th><th align="left"></th><th align="left"></th><th align="left"></th><th align="left"></th><th align="left"></th><th align="left"></th></tr></thead><tbody><tr><td align="left"><strong>1、文件管理</strong></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-cat.html">cat</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-chattr.html">chattr</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-chgrp.html">chgrp</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-chmod.html">chmod</a></td><td align="left">chown</td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-cksum.html">cksum</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-cmp.html">cmp</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-diff.html">diff</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-diffstat.html">diffstat</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-file.html">file</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-find.html">find</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-git.html">git</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-gitview.html">gitview</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-indent.html">indent</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-cut.html">cut</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ln.html">ln</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-less.html">less</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-locate.html">locate</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-lsattr.html">lsattr</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mattrib.html">mattrib</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mc.html">mc</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mdel.html">mdel</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mdir.html">mdir</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mktemp.html">mktemp</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-more.html">more</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mmove.html">mmove</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mread.html">mread</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mren.html">mren</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mtools.html">mtools</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mtoolstest.html">mtoolstest</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mv.html">mv</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-od.html">od</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-paste.html">paste</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-patch.html">patch</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-rcp.html">rcp</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-rm.html">rm</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-slocate.html">slocate</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-split.html">split</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-tee.html">tee</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-tmpwatch.html">tmpwatch</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-touch.html">touch</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-umask.html">umask</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-which.html">which</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-cp.html">cp</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-whereis.html">whereis</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mcopy.html">mcopy</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mshowfat.html">mshowfat</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-rhmask.html">rhmask</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-scp.html">scp</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-awk.html">awk</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-read.html">read</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-updatedb.html">updatedb</a></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><strong>2、文档编辑</strong></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-col.html">col</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-colrm.html">colrm</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-comm.html">comm</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-csplit.html">csplit</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ed.html">ed</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-egrep.html">egrep</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ex.html">ex</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-fgrep.html">fgrep</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-fmt.html">fmt</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-fold.html">fold</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-grep.html">grep</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ispell.html">ispell</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-jed.html">jed</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-joe.html">joe</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-join.html">join</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-look.html">look</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mtype.html">mtype</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-pico.html">pico</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-rgrep.html">rgrep</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-sed.html">sed</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-sort.html">sort</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-spell.html">spell</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-tr.html">tr</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-expr.html">expr</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-uniq.html">uniq</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-wc.html">wc</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-let.html">let</a></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><strong>3、文件传输</strong></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-lprm.html">lprm</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-lpr.html">lpr</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-lpq.html">lpq</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-lpd.html">lpd</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-bye.html">bye</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ftp.html">ftp</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-uuto.html">uuto</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-uupick.html">uupick</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-uucp.html">uucp</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-uucico.html">uucico</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-tftp.html">tftp</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ncftp.html">ncftp</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ftpshut.html">ftpshut</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ftpwho.html">ftpwho</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ftpcount.html">ftpcount</a></td><td align="left"></td></tr><tr><td align="left"><strong>4、磁盘管理</strong></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-cd.html">cd</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-df.html">df</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-dirs.html">dirs</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-du.html">du</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-edquota.html">edquota</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-eject.html">eject</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mcd.html">mcd</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mdeltree.html">mdeltree</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mdu.html">mdu</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mkdir.html">mkdir</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mlabel.html">mlabel</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mmd.html">mmd</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mrd.html">mrd</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mzip.html">mzip</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-pwd.html">pwd</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-quota.html">quota</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mount.html">mount</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mmount.html">mmount</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-rmdir.html">rmdir</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-rmt.html">rmt</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-stat.html">stat</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-tree.html">tree</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-umount.html">umount</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ls.html">ls</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-quotacheck.html">quotacheck</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-quotaoff.html">quotaoff</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-lndir.html">lndir</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-repquota.html">repquota</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-quotaon.html">quotaon</a></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><strong>5、磁盘维护</strong></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-badblocks.html">badblocks</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-cfdisk.html">cfdisk</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-dd.html">dd</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-e2fsck.html">e2fsck</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ext2ed.html">ext2ed</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-fsck.html">fsck</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-fsck-minix.html">fsck.minix</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-fsconf.html">fsconf</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-fdformat.html">fdformat</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-hdparm.html">hdparm</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mformat.html">mformat</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mkbootdisk.html">mkbootdisk</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mkdosfs.html">mkdosfs</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mke2fs.html">mke2fs</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mkfs-ext2.html">mkfs.ext2</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mkfs-msdos.html">mkfs.msdos</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mkinitrd.html">mkinitrd</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mkisofs.html">mkisofs</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mkswap.html">mkswap</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mpartition.html">mpartition</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-swapon.html">swapon</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-symlinks.html">symlinks</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-sync.html">sync</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mbadblocks.html">mbadblocks</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mkfs-minix.html">mkfs.minix</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-fsck-ext2.html">fsck.ext2</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-fdisk.html">fdisk</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-losetup.html">losetup</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mkfs.html">mkfs</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-sfdisk.html">sfdisk</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-swapoff.html">swapoff</a></td><td align="left"></td></tr><tr><td align="left"><strong>6、网络通讯</strong></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-apachectl.html">apachectl</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-arpwatch.html">arpwatch</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-dip.html">dip</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-getty.html">getty</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mingetty.html">mingetty</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-uux.html">uux</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-telnet.html">telnet</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-uulog.html">uulog</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-uustat.html">uustat</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ppp-off.html">ppp-off</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-netconfig.html">netconfig</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-nc.html">nc</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-httpd.html">httpd</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ifconfig.html">ifconfig</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-minicom.html">minicom</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mesg.html">mesg</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-dnsconf.html">dnsconf</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-wall.html">wall</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-netstat.html">netstat</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ping.html">ping</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-pppstats.html">pppstats</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-samba.html">samba</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-setserial.html">setserial</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-talk.html">talk</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-traceroute.html">traceroute</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-tty.html">tty</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-newaliases.html">newaliases</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-uuname.html">uuname</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-netconf.html">netconf</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-write.html">write</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-statserial.html">statserial</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-efax.html">efax</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-pppsetup.html">pppsetup</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-tcpdump.html">tcpdump</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ytalk.html">ytalk</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-cu.html">cu</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-smbd.html">smbd</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-testparm.html">testparm</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-smbclient.html">smbclient</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-shapecfg.html">shapecfg</a></td></tr><tr><td align="left"><strong>7、系统管理</strong></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-adduser.html">adduser</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-chfn.html">chfn</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-useradd.html">useradd</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-date.html">date</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-exit.html">exit</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-finger.html">finger</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-fwhios.html">fwhios</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-sleep.html">sleep</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-suspend.html">suspend</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-groupdel.html">groupdel</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-groupmod.html">groupmod</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-halt.html">halt</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-kill.html">kill</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-last.html">last</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-lastb.html">lastb</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-login.html">login</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-logname.html">logname</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-logout.html">logout</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ps.html">ps</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-nice.html">nice</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-procinfo.html">procinfo</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-top.html">top</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-pstree.html">pstree</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-reboot.html">reboot</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-rlogin.html">rlogin</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-rsh.html">rsh</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-sliplogin.html">sliplogin</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-screen.html">screen</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-shutdown.html">shutdown</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-rwho.html">rwho</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-sudo.html">sudo</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-gitps.html">gitps</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-swatch.html">swatch</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-tload.html">tload</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-logrotate.html">logrotate</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-uname.html">uname</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-chsh.html">chsh</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-userconf.html">userconf</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-userdel.html">userdel</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-usermod.html">usermod</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-vlock.html">vlock</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-who.html">who</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-whoami.html">whoami</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-whois.html">whois</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-newgrp.html">newgrp</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-renice.html">renice</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-su.html">su</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-skill.html">skill</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-w.html">w</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-id.html">id</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-groupadd.html">groupadd</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-free.html">free</a></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><strong>8、系统设置</strong></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-reset.html">reset</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-clear.html">clear</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-alias.html">alias</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-dircolors.html">dircolors</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-aumix.html">aumix</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-bind.html">bind</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-chroot.html">chroot</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-clock.html">clock</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-crontab.html">crontab</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-declare.html">declare</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-depmod.html">depmod</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-dmesg.html">dmesg</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-enable.html">enable</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-eval.html">eval</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-export.html">export</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-pwunconv.html">pwunconv</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-grpconv.html">grpconv</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-rpm.html">rpm</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-insmod.html">insmod</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-kbdconfig.html">kbdconfig</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-lilo.html">lilo</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-liloconfig.html">liloconfig</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-lsmod.html">lsmod</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-minfo.html">minfo</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-set.html">set</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-modprobe.html">modprobe</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ntsysv.html">ntsysv</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mouseconfig.html">mouseconfig</a></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-passwd.html">passwd</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-pwconv.html">pwconv</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-rdate.html">rdate</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-resize.html">resize</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-rmmod.html">rmmod</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-grpunconv.html">grpunconv</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-modinfo.html">modinfo</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-time.html">time</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-setup.html">setup</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-sndconfig.html">sndconfig</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-setenv.html">setenv</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-setconsole.html">setconsole</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-timeconfig.html">timeconfig</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ulimit.html">ulimit</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-unset.html">unset</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-chkconfig.html">chkconfig</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-apmd.html">apmd</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-hwclock.html">hwclock</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-mkkickstart.html">mkkickstart</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-fbset.html">fbset</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-unalias.html">unalias</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-svgatextmode.html">SVGATextMode</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-gpasswd.html">gpasswd</a></td><td align="left"></td></tr><tr><td align="left"><strong>9、备份压缩</strong></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-ar.html">ar</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-bunzip2.html">bunzip2</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-bzip2.html">bzip2</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-bzip2recover.html">bzip2recover</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-gunzip.html">gunzip</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-unarj.html">unarj</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-compress.html">compress</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-cpio.html">cpio</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-dump.html">dump</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-uuencode.html">uuencode</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-gzexe.html">gzexe</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-gzip.html">gzip</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-lha.html">lha</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-restore.html">restore</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-tar.html">tar</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-uudecode.html">uudecode</a></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-unzip.html">unzip</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-zip.html">zip</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-zipinfo.html">zipinfo</a></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><strong>10、设备管理</strong></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"><a href="https://www.runoob.com/linux/linux-comm-setleds.html">setleds</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-loadkeys.html">loadkeys</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-rdev.html">rdev</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-dumpkeys.html">dumpkeys</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-makedev.html">MAKEDEV</a></td><td align="left"><a href="https://www.runoob.com/linux/linux-comm-poweroff.html">poweroff</a></td><td align="left"></td><td align="left"></td></tr></tbody></table><hr><h1 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h1><p><a href="https://www.runoob.com/linux/linux-comm-bc.html">Linux bc 命令</a></p><p><a href="https://www.runoob.com/linux/linux-comm-tail.html">Linux tail 命令</a></p><p><a href="https://www.runoob.com/linux/linux-comm-head.html">Linux head 命令</a></p><p><a href="https://www.runoob.com/linux/linux-comm-xargs.html">Linux xargs 命令</a></p><p><a href="https://www.runoob.com/linux/linux-comm-ip.html">Linux ip 命令</a></p><p><a href="https://www.runoob.com/linux/linux-comm-nohup.html">Linux nohup 命令</a></p><h1 id="扩展文章"><a href="#扩展文章" class="headerlink" title="扩展文章"></a>扩展文章</h1><p><a href="https://www.runoob.com/w3cnote/linux-command-full-fight.html">Linux 常用命令全拼</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;服务器目录&quot;&gt;&lt;a href=&quot;#服务器目录&quot; class=&quot;headerlink&quot; title=&quot;服务器目录&quot;&gt;&lt;/a&gt;服务器目录&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;.
/etc  配置文件
/bin 就是常用命令
/home  用户文件的根目录   相当于win的</summary>
      
    
    
    
    <category term="服务器" scheme="https://merlinahh.github.io/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
    <category term="Linux" scheme="https://merlinahh.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>删除字符串结尾指定字符</title>
    <link href="https://merlinahh.github.io/2019/01/18/substring-remove/"/>
    <id>https://merlinahh.github.io/2019/01/18/substring-remove/</id>
    <published>2019-01-18T04:39:57.000Z</published>
    <updated>2022-02-17T04:46:08.710Z</updated>
    
    <content type="html"><![CDATA[<p>需要删除字符串结尾指定字符需求的函数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">function TargetEndRemove(string, target) &#123;</span><br><span class="line">    if (string.substr(-target.length,target.length) == target) &#123;    //判断字符串string是否以target结尾</span><br><span class="line">        string = string.substring(0,str.lastIndexOf(target))    //若是则删除字符串结尾的target</span><br><span class="line">    &#125;</span><br><span class="line">    return string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;需要删除字符串结尾指定字符需求的函数。&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class</summary>
      
    
    
    
    <category term="前端" scheme="https://merlinahh.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="js" scheme="https://merlinahh.github.io/tags/js/"/>
    
    <category term="笔记" scheme="https://merlinahh.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + GitHub Page 指令</title>
    <link href="https://merlinahh.github.io/2018/07/13/Hexo-GitHub-to-built-a-blog-4/"/>
    <id>https://merlinahh.github.io/2018/07/13/Hexo-GitHub-to-built-a-blog-4/</id>
    <published>2018-07-13T02:22:40.000Z</published>
    <updated>2024-02-28T00:43:17.583Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h1><h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init [folder]</span><br></pre></td></tr></table></figure><p>创建一个网站项目。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。</p><h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &quot;title with whitespace&quot;</span><br></pre></td></tr></table></figure><h2 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>生成静态文件。</p><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-d, –deploy</td><td>文件生成后立即部署网站</td></tr><tr><td>-w, –watch</td><td>监视文件变动</td></tr></tbody></table><p>该命令可以简写为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><h2 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure><p>发表草稿。</p><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/%E3%80%82">http://localhost:4000/。</a></p><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-p, –port</td><td>重设端口</td></tr><tr><td>-s, –static</td><td>只使用静态文件</td></tr><tr><td>-l, –log</td><td>启动日记记录，使用覆盖记录格式</td></tr></tbody></table><h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>部署网站。</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>-g, –generate</td><td>部署之前预先生成静态文件</td></tr></tbody></table><p>该命令可以简写为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="render"><a href="#render" class="headerlink" title="render"></a>render</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure><p>渲染文件。</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>-o, –output</td><td>设置输出路径</td></tr></tbody></table><h2 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo migrate &lt;type&gt;</span><br></pre></td></tr></table></figure><p>从其他博客系统 迁移内容</p><h2 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo list &lt;type&gt;</span><br></pre></td></tr></table></figure><p>列出网站资料。</p><h2 id="version"><a href="#version" class="headerlink" title="version"></a>version</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo version</span><br></pre></td></tr></table></figure><p>显示 Hexo 版本。</p><h1 id="执行选项"><a href="#执行选项" class="headerlink" title="执行选项"></a>执行选项</h1><h2 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a>安全模式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo --safe</span><br></pre></td></tr></table></figure><p>在安全模式下，不会载入插件和脚本。当您在安装新插件遭遇问题时，可以尝试以安全模式重新执行。</p><h2 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo --debug</span><br></pre></td></tr></table></figure><p>在终端中显示调试信息并记录到 debug.log。当您碰到问题时，可以尝试用调试模式重新执行一次，并 提交调试信息到 GitHub。</p><h2 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a>简洁模式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo --silent</span><br></pre></td></tr></table></figure><p>隐藏终端信息。</p><h2 id="自定义配置文件的路径"><a href="#自定义配置文件的路径" class="headerlink" title="自定义配置文件的路径"></a>自定义配置文件的路径</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo --config custom.yml</span><br></pre></td></tr></table></figure><p>自定义配置文件的路径，执行后将不再使用 _config.yml。</p><h2 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a>显示草稿</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo --draft</span><br></pre></td></tr></table></figure><p>显示 source/_drafts 文件夹中的草稿文章。</p><h2 id="自定义-CWD"><a href="#自定义-CWD" class="headerlink" title="自定义 CWD"></a>自定义 CWD</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure><p>自定义当前工作目录（Current working directory）的路径。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;常用指令&quot;&gt;&lt;a href=&quot;#常用指令&quot; class=&quot;headerlink&quot; title=&quot;常用指令&quot;&gt;&lt;/a&gt;常用指令&lt;/h1&gt;&lt;h2 id=&quot;init&quot;&gt;&lt;a href=&quot;#init&quot; class=&quot;headerlink&quot; title=&quot;init&quot;&gt;&lt;/a</summary>
      
    
    
    
    <category term="前端" scheme="https://merlinahh.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="GitHub Page" scheme="https://merlinahh.github.io/tags/GitHub-Page/"/>
    
    <category term="HEXO" scheme="https://merlinahh.github.io/tags/HEXO/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + GitHub Page 修改配置文件 _config.yml</title>
    <link href="https://merlinahh.github.io/2018/06/13/Hexo-GitHub-to-built-a-blog-3/"/>
    <id>https://merlinahh.github.io/2018/06/13/Hexo-GitHub-to-built-a-blog-3/</id>
    <published>2018-06-13T01:23:10.000Z</published>
    <updated>2024-02-28T00:43:20.073Z</updated>
    
    <content type="html"><![CDATA[<p>您可以在 <code>_config.yml</code> 中修改大部分的配置。</p><h1 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h1><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td>网站标题</td></tr><tr><td>subtitle</td><td>网站副标题</td></tr><tr><td>description</td><td>网站描述</td></tr><tr><td>author</td><td>您的名字</td></tr><tr><td>language</td><td>网站使用的语言</td></tr><tr><td>timezone</td><td>网站时区。Hexo 默认使用您电脑的时区。时区列表。比如说：America/New_York， Japan， 和 UTC 。</td></tr></tbody></table><p>其中，description主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词。author参数用于主题显示文章的作者。</p><h1 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h1><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>url</td><td>网址</td><td></td></tr><tr><td>root</td><td>网站根目录</td><td></td></tr><tr><td>permalink</td><td>文章的永久链接格式</td><td>:year/:month/:day/:title/</td></tr><tr><td>permalink_defaults</td><td>永久链接中各部分的默认值</td><td></td></tr></tbody></table><ul><li>如果您的网站存放在子目录中，例如 <a href="http://yoursite.com/blog%EF%BC%8C%E5%88%99%E8%AF%B7%E5%B0%86%E6%82%A8%E7%9A%84">http://yoursite.com/blog，则请将您的</a> url 设为 <a href="http://yoursite.com/blog">http://yoursite.com/blog</a> 并把 root 设为 /blog/。</li></ul><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>source_dir</td><td>资源文件夹，这个文件夹用来存放内容。</td><td>source</td></tr><tr><td>public_dir</td><td>公共文件夹，这个文件夹用于存放生成的站点文件。</td><td>public</td></tr><tr><td>tag_dir</td><td>标签文件夹</td><td>tags</td></tr><tr><td>archive_dir</td><td>归档文件夹</td><td>archives</td></tr><tr><td>category_dir</td><td>分类文件夹</td><td>categories</td></tr><tr><td>code_dir</td><td>Include code 文件夹</td><td>downloads/code</td></tr><tr><td>i18n_dir</td><td>国际化（i18n）文件夹</td><td>:lang</td></tr><tr><td>skip_render</td><td>跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。</td><td></td></tr></tbody></table><p>如果您刚刚开始接触Hexo，通常没有必要修改这一部分的值。</p><h1 id="文章"><a href="#文章" class="headerlink" title="文章"></a>文章</h1><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>new_post_name</td><td>新文章的文件名称</td><td>:title.md</td></tr><tr><td>default_layout</td><td>预设布局</td><td>post</td></tr><tr><td>auto_spacing</td><td>在中文和英文之间加入空格</td><td>false</td></tr><tr><td>titlecase</td><td>把标题转换为title case</td><td>false</td></tr><tr><td>external_link</td><td>在新标签中打开链接</td><td>true</td></tr><tr><td>filename_case</td><td>把文件名称转换为(1) 小写或 (2) 大写</td><td>0</td></tr><tr><td>render_drafts</td><td>显示草稿</td><td>false</td></tr><tr><td>post_asset_folder</td><td>启动Asset文件夹，影响图片引入</td><td>false</td></tr><tr><td>relative_link</td><td>把链接改为与根目录的相对位址</td><td>false</td></tr><tr><td>future</td><td>显示未来的文章</td><td>true</td></tr><tr><td>highlight</td><td>代码块的设置</td><td></td></tr></tbody></table><p>默认情况下，Hexo生成的超链接都是绝对地址。</p><p>例如，如果您的网站&gt; 域名为example.com，您有一篇文章名为hello，那么绝对链接可能像这样：<a href="http://example.com/hello.html">http://example.com/hello.html</a><br>，它是绝对于域名的。相对链接像这样：/hello.html，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。</p><p>通常情况下，建议用绝对地址。</p><h1 id="分类-amp-标签"><a href="#分类-amp-标签" class="headerlink" title="分类 &amp; 标签"></a>分类 &amp; 标签</h1><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>default_category</td><td>默认分类</td><td></td></tr><tr><td>category_map</td><td>分类别名</td><td></td></tr><tr><td>tag_map</td><td>标签别名</td><td></td></tr></tbody></table><h1 id="日期时间格式"><a href="#日期时间格式" class="headerlink" title="日期时间格式"></a>日期时间格式</h1><p>Hexo 使用Moment.js 来解析和显示时间。</p><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>date_format</td><td>日期格式</td><td>YYYY-MM-DD</td></tr><tr><td>time_format</td><td>时间格式</td><td>H:mm:ss</td></tr></tbody></table><h1 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h1><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>per_page</td><td>每页显示的文章量 (0 = 关闭分页功能)</td><td>10</td></tr><tr><td>pagination_dir</td><td>分页目录</td><td>page</td></tr></tbody></table><h1 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h1><table><thead><tr><th>参数</th><th>描述</th><th>默认值</th></tr></thead><tbody><tr><td>theme</td><td>当前主题名称。值为false时禁用主题</td><td></td></tr><tr><td>deploy</td><td>部署部分的设置</td><td></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;您可以在 &lt;code&gt;_config.yml&lt;/code&gt; 中修改大部分的配置。&lt;/p&gt;
&lt;h1 id=&quot;网站&quot;&gt;&lt;a href=&quot;#网站&quot; class=&quot;headerlink&quot; title=&quot;网站&quot;&gt;&lt;/a&gt;网站&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;</summary>
      
    
    
    
    <category term="前端" scheme="https://merlinahh.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="GitHub Page" scheme="https://merlinahh.github.io/tags/GitHub-Page/"/>
    
    <category term="HEXO" scheme="https://merlinahh.github.io/tags/HEXO/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + GitHub Page 目录结构</title>
    <link href="https://merlinahh.github.io/2018/06/13/Hexo-GitHub-to-built-a-blog-2/"/>
    <id>https://merlinahh.github.io/2018/06/13/Hexo-GitHub-to-built-a-blog-2/</id>
    <published>2018-06-13T00:34:28.000Z</published>
    <updated>2024-02-28T00:43:21.965Z</updated>
    
    <content type="html"><![CDATA[<p>接上一篇 安装完环境，配置托管服务器，编写博客之前，需要了解目录结构：</p><h1 id="项目目录结构"><a href="#项目目录结构" class="headerlink" title="项目目录结构"></a>项目目录结构</h1><p>项目创建完成，指定文件夹的目录如下：</p><pre><code>.├── .deploy        # 需要部署的文件├── node_modules    # Hexo插件├── public          # 生成的静态网页文件├── scaffolds      # 模板├── source          # 博客正文和其他源文件等| ├── _drafts      # 草稿| └── _posts        # 文章├── themes          # 主题├── _config.yml    # 全局配置文件└── package.json    # npm 依赖等</code></pre><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><p><code>package.json</code> 文件：应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;name&quot;: &quot;hexo-site&quot;,        # 项目名称</span><br><span class="line">    &quot;version&quot;: &quot;0.0.0&quot;,         # 项目版本号</span><br><span class="line">    &quot;private&quot;: true,</span><br><span class="line">    &quot;scripts&quot;: &#123;                # npm 命令</span><br><span class="line">        &quot;build&quot;: &quot;hexo generate&quot;,</span><br><span class="line">        &quot;clean&quot;: &quot;hexo clean&quot;,</span><br><span class="line">        &quot;deploy&quot;: &quot;hexo deploy&quot;,</span><br><span class="line">        &quot;server&quot;: &quot;hexo server&quot;     # 运行项目</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;hexo&quot;: &#123;</span><br><span class="line">        &quot;version&quot;: &quot;5.4.1&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;dependencies&quot;: &#123;</span><br><span class="line">        &quot;hexo&quot;: &quot;^5.0.0&quot;,</span><br><span class="line">        &quot;hexo-deployer-git&quot;: &quot;^3.0.0&quot;,</span><br><span class="line">        &quot;hexo-generator-archive&quot;: &quot;^1.0.0&quot;,</span><br><span class="line">        &quot;hexo-generator-category&quot;: &quot;^1.0.0&quot;,</span><br><span class="line">        &quot;hexo-generator-index&quot;: &quot;^2.0.0&quot;,</span><br><span class="line">        &quot;hexo-generator-tag&quot;: &quot;^1.0.0&quot;,</span><br><span class="line">        &quot;hexo-renderer-ejs&quot;: &quot;^1.0.0&quot;,</span><br><span class="line">        &quot;hexo-renderer-marked&quot;: &quot;^4.0.0&quot;,</span><br><span class="line">        &quot;hexo-renderer-stylus&quot;: &quot;^2.0.0&quot;,</span><br><span class="line">        &quot;hexo-server&quot;: &quot;^2.0.0&quot;,</span><br><span class="line">        &quot;hexo-theme-landscape&quot;: &quot;^0.0.3&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h2><p><code>scaffolds</code> 模版文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p><p>Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p><h2 id="source"><a href="#source" class="headerlink" title="source"></a>source</h2><p><code>source</code> 资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</p><h2 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h2><p><code>themes</code> 主题文件夹。Hexo 会根据主题来生成静态页面。</p>]]></content>
    
    
    <summary type="html">安装完环境，配置托管服务器，编写博客之前，需要了解的目录结构。</summary>
    
    
    
    <category term="前端" scheme="https://merlinahh.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="GitHub Page" scheme="https://merlinahh.github.io/tags/GitHub-Page/"/>
    
    <category term="HEXO" scheme="https://merlinahh.github.io/tags/HEXO/"/>
    
  </entry>
  
  <entry>
    <title>Hexo + Github 搭建博客</title>
    <link href="https://merlinahh.github.io/2018/06/13/Hexo-Github-to-build-a-blog/"/>
    <id>https://merlinahh.github.io/2018/06/13/Hexo-Github-to-build-a-blog/</id>
    <published>2018-06-12T21:16:12.000Z</published>
    <updated>2024-02-28T00:43:30.660Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><h1 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h1><p>安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：</p><ul><li>Node.js (Should be at least nodejs 6.9)</li><li>Git</li></ul><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。</p><p>如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。</p><h2 id="1-安装-Node-js"><a href="#1-安装-Node-js" class="headerlink" title="1. 安装 Node.js"></a>1. 安装 Node.js</h2><p>由于 Hexo 博客系统是基于 Node.js 编写的，所以要安装 Node.js 。<br>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境，可以在非浏览器环境下，解释运行 JS 代码。</p><ul><li>官网下载安装包： <a href="https://nodejs.org/en/">https://nodejs.org/en/</a></li></ul><p><img src="/2018/06/13/Hexo-Github-to-build-a-blog/1.png"></p><p>安装过程不要修改配置，一路确认下一步</p><p><img src="/2018/06/13/Hexo-Github-to-build-a-blog/2.png"><br><img src="/2018/06/13/Hexo-Github-to-build-a-blog/3.png"></p><p>确认安装结束</p><p>打开终端输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p><img src="/2018/06/13/Hexo-Github-to-build-a-blog/4.png"><br>显示出版本号即安装成功</p><h2 id="2-安装-Git"><a href="#2-安装-Git" class="headerlink" title="2. 安装 Git"></a>2. 安装 Git</h2><p>使用 git 将代码/文章提交到 GitHub 托管，不需要购买服务器和域名就能够实现博客的运行和访问。</p><p><img src="/2018/06/13/Hexo-Github-to-build-a-blog/5.webp"></p><p>打开终端输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><p>显示出版本号即安装成功</p><h3 id="Github账号注册：https-github-com"><a href="#Github账号注册：https-github-com" class="headerlink" title="Github账号注册：https://github.com/"></a>Github账号注册：<a href="https://github.com/">https://github.com/</a></h3><p><img src="/2018/06/13/Hexo-Github-to-build-a-blog/6.jpg"></p><p>仓库创建：</p><ul><li>仓库名一定是你的用户名（以下用 <strong>MerlinAhh</strong> 代替）， 例：<code>MerlinAhh/MerlinAhh.github.io</code></li></ul><p>访问 MerlinAhh.github.io，如果可以正常访问，那么 Github 的配置已经结束了。</p><p>到此搭建 Hexo 博客的相关环境配置已经完成。</p><h1 id="安装-HEXO"><a href="#安装-HEXO" class="headerlink" title="安装 HEXO"></a>安装 HEXO</h1><ul><li>HEXO文档：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></li></ul><p>打开终端输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>运行结束后输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>显示版本号等信息即安装成功</p><h2 id="创建本地项目"><a href="#创建本地项目" class="headerlink" title="创建本地项目"></a>创建本地项目</h2><p>创建本地项目并安装依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo init MerlinAhh.github.io</span><br><span class="line"></span><br><span class="line">cd MerlinAhh.github.io</span><br><span class="line"></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>安装结束后可见项目结构</p><pre><code>.├── .deploy        #需要部署的文件├── node_modules    #Hexo插件├── public          #生成的静态网页文件├── scaffolds      #模板├── source          #博客正文和其他源文件等| ├── _drafts      #草稿| └── _posts        #文章├── themes          #主题├── _config.yml    #全局配置文件└── package.json    #npm 依赖等</code></pre><p>打开 <code>package.json</code> 可见 <code>scripts</code> 中为 npm 命令</p><p>执行 </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm server</span><br></pre></td></tr></table></figure><p>即可，或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server 或 hexo s</span><br></pre></td></tr></table></figure><p><img src="/2018/06/13/Hexo-Github-to-build-a-blog/7.jpg"></p><p>打开 <a href="http://localhost:4000/">http://localhost:4000/</a> 显示该界面，即说明你的hexo本地博客搭建成功。</p><h1 id="本地项目关联-GitHub-Page-项目"><a href="#本地项目关联-GitHub-Page-项目" class="headerlink" title="本地项目关联 GitHub Page 项目"></a>本地项目关联 GitHub Page 项目</h1><p>本地项目根目录找到 <code>_config.yml</code> 文件最后一行，修改</p><p><img src="/2018/06/13/Hexo-Github-to-build-a-blog/9.jpg"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repo: git@github.com:MerlinAhh/MerlinAhh.github.io.git （自己的仓库地址）</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><p><img src="/2018/06/13/Hexo-Github-to-build-a-blog/8.jpg"></p><p>删除旧的 public 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><p>打包新的 public 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">或者</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>开始部署</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo deploye</span><br><span class="line">或者</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>部署结束后，浏览器中输入你的网址 <code>MerlinAhh.github.io</code> 查看 (此时可能有一两分钟延迟，耐心等下)</p><h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><ul><li>官方主题：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></li></ul><p>下载主题到你的 <code>theme</code> 目录，项目根目录下 <code>_config.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Extensions</span><br><span class="line">## Plugins: https://hexo.io/plugins/</span><br><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: merlintheme</span><br></pre></td></tr></table></figure><p>theme 修改成新下载的主题目录名即可！</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>HEXO + GitHub Pages 的优势是无需购置服务器，免服务器费的同时还能做负载均衡，并且 github pages有300M免费空间。只做个人文章展示，完全够用的！</p>]]></content>
    
    
    <summary type="html">使用 hexo 和 GitHub page 搭建一个不需要服务器不需要域名的在线博客，使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。。</summary>
    
    
    
    <category term="前端" scheme="https://merlinahh.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="GitHub Page" scheme="https://merlinahh.github.io/tags/GitHub-Page/"/>
    
    <category term="HEXO" scheme="https://merlinahh.github.io/tags/HEXO/"/>
    
  </entry>
  
  <entry>
    <title>小程序_推送模板消息 TEMPLATE</title>
    <link href="https://merlinahh.github.io/2018/06/02/wxapp-template/"/>
    <id>https://merlinahh.github.io/2018/06/02/wxapp-template/</id>
    <published>2018-06-02T02:56:52.000Z</published>
    <updated>2024-02-28T00:45:09.279Z</updated>
    
    <content type="html"><![CDATA[<p>模板消息</p><p>页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form bindsubmit=&quot;formSubmit&quot; report-submit=&quot;ture&quot;&gt;</span><br><span class="line">    &lt;button formType=&quot;submit&quot;&gt;Submit&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>js逻辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">formSubmit: function (e) &#123;</span><br><span class="line">    var that = this</span><br><span class="line">    var formId = e.detail.formId</span><br><span class="line">    var data = &#123;</span><br><span class="line">        &quot;keyword1&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;339208499&quot;,</span><br><span class="line">            &quot;color&quot;: &quot;#173177&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;keyword2&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;2015年01月05日 12:30&quot;,</span><br><span class="line">            &quot;color&quot;: &quot;#173177&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;keyword3&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;粤海喜来登酒店&quot;,</span><br><span class="line">            &quot;color&quot;: &quot;#173177&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;keyword4&quot;: &#123;</span><br><span class="line">            &quot;value&quot;: &quot;广州市天河区天河路208号&quot;,</span><br><span class="line">            &quot;color&quot;: &quot;#173177&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    data = JSON.stringify(data)</span><br><span class="line"></span><br><span class="line">    var params = new Object()</span><br><span class="line">    params.templateId = &#x27;1MZ9eoaAEmOHR-5BO52ahVpDhLXu6ZGJ52NK_x6_Yxc&#x27;,</span><br><span class="line">    params.page = &#x27;/pages/profile/comment&#x27;,</span><br><span class="line">    params.formId = formId,</span><br><span class="line">    params.data = data</span><br><span class="line"></span><br><span class="line">    // 写入参数  </span><br><span class="line">    params.productId = productId</span><br><span class="line">    params.url = app.config.apiBase + &quot;/front/template/pushtemplate&quot;</span><br><span class="line"></span><br><span class="line">    // 发起请求  </span><br><span class="line">    network.POST(&#123;</span><br><span class="line">        params: params,</span><br><span class="line">        success: function (res) &#123;</span><br><span class="line">            console.log(res)</span><br><span class="line">        &#125;,</span><br><span class="line">        fail: function (res) &#123;</span><br><span class="line">            console.log(res)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小程序模板消息</p><p>小程序可以多次存储 formid 进行多次推送消息，目前一些大一点的做小程序粉丝互动的平台基本上都是用这个方法。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;模板消息&lt;/p&gt;
&lt;p&gt;页面&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;lin</summary>
      
    
    
    
    <category term="前端" scheme="https://merlinahh.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="小程序" scheme="https://merlinahh.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>三种方式实现瀑布流图文布局</title>
    <link href="https://merlinahh.github.io/2018/02/17/Masonry-Layouts/"/>
    <id>https://merlinahh.github.io/2018/02/17/Masonry-Layouts/</id>
    <published>2018-02-16T16:49:26.000Z</published>
    <updated>2024-02-28T00:50:35.058Z</updated>
    
    <content type="html"><![CDATA[<p>瀑布流又称瀑布流式布局，是比较流行的一种网站页面布局方式，视觉表现为参差不齐的多栏布局，随着页面滚动条向下滚动，这种布局还会不断加载数据块并附加至当前尾部。</p><p>最早采用此布局的网站是Pinterest，逐渐在国内流行开来。</p><p>花瓣、小红书等需要图文混排，且图片尺寸不一的网站，布局都是使用的瀑布流。</p><p><img src="/2018/02/17/Masonry-Layouts/1.jpg" alt="花瓣首页瀑布流"></p><p><strong>瀑布流的优势</strong>：</p><ol><li>不裁剪不拉伸的以原比例完整的展示图片，不同尺寸排布错落有致</li><li>空间使用更加充分，视觉上也让注意力集中在图片上，便于快速获得更多信息</li><li>布局简洁清新，避免页面复杂乱糟糟</li></ol><p>以下介绍瀑布流在前端的三种实现方案</p><h1 id="1-纯-HTML-CSS-column-实现"><a href="#1-纯-HTML-CSS-column-实现" class="headerlink" title="1. 纯 HTML + CSS column 实现"></a>1. 纯 HTML + CSS column 实现</h1><p>column可以指定容器下元素列的宽度和数量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">columns: column-width column-count;</span><br></pre></td></tr></table></figure><p>瀑布流用到的属性是：</p><pre><code>column-count：指定列数column-gap：列之间的差距</code></pre><h2 id="演示："><a href="#演示：" class="headerlink" title="演示："></a>演示：</h2><p><img src="/2018/02/17/Masonry-Layouts/2.jpg" alt="column实现的效果"></p><p>html：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;list&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">        &lt;img src=&quot;https://s4.ax1x.com/2022/02/17/H4YZeH.png&quot; /&gt;</span><br><span class="line">        &lt;h3&gt;标题&lt;/h3&gt;</span><br><span class="line">        &lt;p&gt;描述&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>css:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.list &#123;</span><br><span class="line">    columns: 4;</span><br><span class="line">    column-gap: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.item &#123;</span><br><span class="line">    width: auto;</span><br><span class="line">    break-inside: avoid;</span><br><span class="line">    margin-bottom: 20px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.item img &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此方案布局排布顺序见图，从上至下，从左至右，布局顺序不太理想。但是不需要js，纯 HTML + CSS 实现的。</p><p><a href="/demo/masonry-layouts/column.html" target="_blank">在线demo</a></p><h1 id="2-纯-HTML-CSS-flex-实现"><a href="#2-纯-HTML-CSS-flex-实现" class="headerlink" title="2. 纯 HTML + CSS flex 实现"></a>2. 纯 HTML + CSS flex 实现</h1><p>对父容器设置弹性盒后，因为瀑布流是多行的所以还要flex-wrap设置wrap，并且flex-direction还要设置为column。</p><p>最关键的是<strong>一定要设置一个高度</strong>。</p><h2 id="演示：-1"><a href="#演示：-1" class="headerlink" title="演示："></a>演示：</h2><p><img src="/2018/02/17/Masonry-Layouts/4.jpg" alt="flex实现的瀑布流"></p><p>html:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;list&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;img&quot; style=&quot;height:100px&quot;&gt;1&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;img&quot; style=&quot;height:250px&quot;&gt;2&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;img&quot; style=&quot;height:120px&quot;&gt;3&lt;/div&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>css:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">.list &#123;</span><br><span class="line">    display: flex;</span><br><span class="line">    flex-wrap: wrap;</span><br><span class="line">    flex-direction: column;</span><br><span class="line">    height: 3800px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.list&gt;.img &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    width: calc(100% / 4 - 20px);</span><br><span class="line">    margin: 10px;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    background: rgb(193, 193, 193);</span><br><span class="line">    font-size: 40px;</span><br><span class="line">    text-align: center;</span><br><span class="line">    color: rgb(229, 229, 229);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.list&gt;.img:nth-child(4n+1) &#123;</span><br><span class="line">    order: 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.list&gt;.img:nth-child(4n+2) &#123;</span><br><span class="line">    order: 2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.list&gt;.img:nth-child(4n+3) &#123;</span><br><span class="line">    order: 3;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.list&gt;.img:nth-child(4n) &#123;</span><br><span class="line">    order: 4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="/demo/masonry-layouts/flex.html" target="_blank">在线demo</a></p><h1 id="3-js-position-实现"><a href="#3-js-position-实现" class="headerlink" title="3. js + position 实现"></a>3. js + position 实现</h1><p>js实现瀑布流的话，考虑把子元素全部设置成绝对定位。</p><p>然后监听图片加载，如果加载完就把子元素设置其对应的位置，逐个塞到父容器中。</p><p>父容器高度取列表数组的最大值，子元素设置 absolute 通过上一层排列位置及高度，来摆放下一个的 top/left 定位位置</p><h2 id="演示：-2"><a href="#演示：-2" class="headerlink" title="演示："></a>演示：</h2><p><img src="/2018/02/17/Masonry-Layouts/3.jpg" alt="js + position 实现瀑布流"></p><p>html:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;list&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;img&quot;&gt;1&lt;/div&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>css:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.list .img &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    width: 250px;</span><br><span class="line">    margin: 10px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>js:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">var colCount   // 定义列数</span><br><span class="line">var colHeightArry = []   // 定义列高度数组</span><br><span class="line">var imgWidth = $(&#x27;.list .img&#x27;).outerWidth(true)   // 单张图片的宽度</span><br><span class="line">colCount = parseInt($(&#x27;.list&#x27;).width() / imgWidth)   // 计算出列数</span><br><span class="line">for (var i = 0; i &lt; colCount; i++) &#123;</span><br><span class="line">    colHeightArry[i] = 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 当窗口大小重置之后，重新执行</span><br><span class="line">$(window).on(&#x27;resize&#x27;, function () &#123;</span><br><span class="line">    reset()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 当窗口加载完毕，执行瀑布流</span><br><span class="line">$(window).on(&#x27;load&#x27;, function () &#123;</span><br><span class="line">    reset()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">// 定义reset函数</span><br><span class="line">function reset() &#123;</span><br><span class="line">    var colHeightArry = []</span><br><span class="line">    colCount = parseInt($(&#x27;.list&#x27;).width() / imgWidth)</span><br><span class="line">    for (var i = 0; i &lt; colCount; i++) &#123;</span><br><span class="line">        colHeightArry[i] = 0</span><br><span class="line">    &#125;</span><br><span class="line">    $(&#x27;.list .img&#x27;).each(function () &#123;</span><br><span class="line">        var minValue = colHeightArry[0]</span><br><span class="line">        var minIndex = 0</span><br><span class="line">        for (var i = 0; i &lt; colCount; i++) &#123;</span><br><span class="line">            if (colHeightArry[i] &lt; minValue) &#123;</span><br><span class="line">                minValue = colHeightArry[i]</span><br><span class="line">                minIndex = i</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $(this).css(&#123;</span><br><span class="line">            height: Math.floor(Math.random() * (600 - 100 + 1)) + 100,</span><br><span class="line">            left: minIndex * imgWidth,</span><br><span class="line">            top: minValue</span><br><span class="line">        &#125;)</span><br><span class="line">        colHeightArry[minIndex] += $(this).outerHeight(true)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="/demo/masonry-layouts/position.html" target="_blank">在线demo</a></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>以上就是瀑布流布局的三种主流方案。</p><p>只使用 css 实现相对简单，性能好，图片自动填充不用考虑图片加载状态。<br>column 的效果无法修改排布顺序，flex 实现的顺序在一定程度上可以改变。</p><p>使用 js 实现，优点是控制灵活，随意扩展，也可以无限加载，不用过多考虑兼容问题，同时可以添加诸多动画来增强用户体验。<br>但是实现相对复杂。图片填充需要考虑图片加载状态，性能逊色于纯css实现。</p>]]></content>
    
    
    <summary type="html">瀑布流的主流实现方案</summary>
    
    
    
    <category term="前端" scheme="https://merlinahh.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="js" scheme="https://merlinahh.github.io/tags/js/"/>
    
    <category term="笔记" scheme="https://merlinahh.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
    <category term="HTML+CSS" scheme="https://merlinahh.github.io/tags/HTML-CSS/"/>
    
  </entry>
  
  <entry>
    <title>表单验证工具函数集合</title>
    <link href="https://merlinahh.github.io/2018/02/10/CheckUtil/"/>
    <id>https://merlinahh.github.io/2018/02/10/CheckUtil/</id>
    <published>2018-02-10T08:03:25.000Z</published>
    <updated>2022-02-17T08:20:53.163Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">export default class CheckUtil &#123;</span><br><span class="line">    /**</span><br><span class="line">     * 验证手机号</span><br><span class="line">     */</span><br><span class="line">    checkPhone(phoneNum: string) &#123;</span><br><span class="line">        let phoneReg = /^1\d&#123;10&#125;$/;</span><br><span class="line">        if (phoneReg.test(phoneNum)) &#123;</span><br><span class="line">            //手机号码格式正确</span><br><span class="line">            return true</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            //手机号码格式不正确</span><br><span class="line">            return false</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 验证邮箱</span><br><span class="line">     */</span><br><span class="line">    checkEmail(email: string) &#123;</span><br><span class="line">        let emailReg = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*\.[a-zA-Z0-9]&#123;2,6&#125;$/;</span><br><span class="line">        if (emailReg.test(email)) &#123;</span><br><span class="line">            //邮箱格式正确</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            //邮箱格式不正确</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 验证QQ邮箱</span><br><span class="line">     */</span><br><span class="line">    checkQQ(qq: string) &#123;</span><br><span class="line">        let qqReg =  /^[1-9][0-9]&#123;4,9&#125;$/gim;</span><br><span class="line">        if (qqReg.test(qq)) &#123;</span><br><span class="line">            //邮箱格式正确</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            //邮箱格式不正确</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 验证账号</span><br><span class="line">     */</span><br><span class="line">    checkAccount(email: string) &#123;</span><br><span class="line">        let emailReg = /^[a-zA-Z0-9/!@#$%^&amp;*()-_+,.?/&lt;&gt;|]&#123;1,32&#125;$/;</span><br><span class="line">        if (emailReg.test(email)) &#123;</span><br><span class="line">            //邮箱格式正确</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            //邮箱格式不正确</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 验证图形验证码</span><br><span class="line">     */</span><br><span class="line">    checkimgVerificatioCode(imgVerificatioCode: string) &#123;</span><br><span class="line">        if (imgVerificatioCode.length == 4) &#123;</span><br><span class="line">            //短信验证码正确</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            //短信验证码不正确</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 验证短信验证码</span><br><span class="line">     */</span><br><span class="line">    checkSmscode(smscode: string) &#123;</span><br><span class="line">        if (smscode.length == 6 || smscode.length == 5) &#123;</span><br><span class="line">            //短信验证码正确</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            //短信验证码不正确</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 验证邮箱验证码</span><br><span class="line">     */</span><br><span class="line">    checkMailcode(mailcode: string) &#123;</span><br><span class="line">        if (mailcode.length == 6) &#123;</span><br><span class="line">            //邮箱验证码格式正确</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            //邮箱验证码格式不正确</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 验证被记住密码</span><br><span class="line">     */</span><br><span class="line">    checkRemberPwd(pwd: string) &#123;</span><br><span class="line">        let pwdReg = /^[a-zA-Z0-9]&#123;32&#125;$/</span><br><span class="line">        if (pwdReg.test(pwd)) &#123;</span><br><span class="line">            //密码格式正确</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            //密码格式不正确</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 验证密码</span><br><span class="line">     */</span><br><span class="line">    checkPwd(pwd: string) &#123;</span><br><span class="line">        let pwdReg = /^(?![0-9]+$)(?![a-zA-Z]+$)(?![!@#$%^&amp;*()_+,.?/&lt;&gt;|]+$)[0-9A-Za-z!@#$%^&amp;*()_+,.?/&lt;&gt;|]&#123;6,20&#125;$/</span><br><span class="line">        if (pwdReg.test(pwd)) &#123;</span><br><span class="line">            //密码格式正确</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            //密码格式不正确</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 验证二级密码</span><br><span class="line">     */</span><br><span class="line">    checkSecondPwd(pwd: string) &#123;</span><br><span class="line">        let pwdReg = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]&#123;4,12&#125;$/</span><br><span class="line">        if (pwdReg.test(pwd)) &#123;</span><br><span class="line">            //密码格式正确</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            //密码格式不正确</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 确认密码验证</span><br><span class="line">     */</span><br><span class="line">    checkPwdTwo(pwdTwo: string, pwd: string) &#123;</span><br><span class="line">        if (pwdTwo == pwd) &#123;</span><br><span class="line">            //密码格式正确</span><br><span class="line">            return true;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            //密码格式不正确</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    <category term="前端" scheme="https://merlinahh.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="js" scheme="https://merlinahh.github.io/tags/js/"/>
    
    <category term="笔记" scheme="https://merlinahh.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>RegExp 正则匹配去空格处理</title>
    <link href="https://merlinahh.github.io/2017/12/11/RegExp-remove-space/"/>
    <id>https://merlinahh.github.io/2017/12/11/RegExp-remove-space/</id>
    <published>2017-12-11T02:53:04.000Z</published>
    <updated>2024-02-28T00:44:12.634Z</updated>
    
    <content type="html"><![CDATA[<p>去首尾空白字符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var Message = &#x27;&#x27;</span><br><span class="line"></span><br><span class="line">var trim = function trim(str) &#123;</span><br><span class="line">//将空格替换为无</span><br><span class="line">str = str.replace(/^(\s|\u00A0)+/, &#x27;&#x27;);</span><br><span class="line">for (var i = str.length - 1; i &gt;= 0; i--) &#123;</span><br><span class="line">    if (/\S/.test(str.charAt(i))) &#123;</span><br><span class="line">    str = str.substring(0, i + 1);</span><br><span class="line">    break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">console.log(str)</span><br><span class="line">Message = str</span><br><span class="line">return str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">//写trim方法</span><br><span class="line">function trim(str)&#123;</span><br><span class="line">    // 将空格替换为无</span><br><span class="line">    str=str.replace(/^(\s|\u00A0)+/,&#x27;&#x27;);    // 此处设置空格替换内容</span><br><span class="line">    for(var i=str.length-1; i&gt;=0; i--)&#123;</span><br><span class="line">        if(/\S/.test(str.charAt(i)))&#123;</span><br><span class="line">            str = str.substring(0,i+1);</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//调用</span><br><span class="line">function commithandling()&#123;</span><br><span class="line">    var suggestion=document.getElementById(&quot;suggestion&quot;).value;</span><br><span class="line">    if(trim(suggestion)!=&quot;&quot;&amp;&amp; suggestion.length&gt;0)&#123;</span><br><span class="line">        $.post(&quot;/lord/commithandling&quot;,&#123;&#x27;idea&#x27;:suggestion&#125;,function(data)&#123;</span><br><span class="line">            if(data==1)&#123;</span><br><span class="line">                alert(&quot;提交意见成功&quot;);</span><br><span class="line">                document.location.reload();</span><br><span class="line"></span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                alert(&quot;处理意见不能为空&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">RegExp remove space</summary>
    
    
    
    <category term="前端" scheme="https://merlinahh.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="RegExp" scheme="https://merlinahh.github.io/tags/RegExp/"/>
    
  </entry>
  
</feed>
